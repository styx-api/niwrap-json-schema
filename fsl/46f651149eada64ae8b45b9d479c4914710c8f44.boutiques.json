{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Automated brain extraction tool for FSL",
  "type": "object",
  "properties": {
    "__STYXTYPE__": {
      "const": "bet"
    },
    "infile": {
      "type": "string",
      "title": "Input file",
      "description": "Input image (e.g. img.nii.gz)"
    },
    "maskfile": {
      "type": "string",
      "default": "img_bet",
      "title": "Mask file",
      "description": "Output brain mask (e.g. img_bet.nii.gz)"
    },
    "fractional_intensity": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Fractional intensity threshold",
      "description": "Fractional intensity threshold (0->1); default=0.5; smaller values give larger brain outline estimates"
    },
    "vg_fractional_intensity": {
      "anyOf": [
        {
          "type": "number",
          "minimum": -1,
          "maximum": 1
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Vertical gradient fractional intensity threshold",
      "description": "Vertical gradient in fractional intensity threshold (-1->1); default=0; positive values give larger brain outline at bottom, smaller at top"
    },
    "center_of_gravity": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Center of gravity vector",
      "description": "The xyz coordinates of the center of gravity (voxels, not mm) of initial mesh surface. Must have exactly three numerical entries in the list (3-vector)."
    },
    "overlay": {
      "type": "boolean",
      "default": false,
      "title": "Overlay flag",
      "description": "Generate brain surface outline overlaid onto original image"
    },
    "binary_mask": {
      "type": "boolean",
      "default": false,
      "title": "Binary mask flag",
      "description": "Generate binary brain mask"
    },
    "approx_skull": {
      "type": "boolean",
      "default": false,
      "title": "Approximate skull flag",
      "description": "Generate rough skull image (not as clean as betsurf)"
    },
    "no_seg_output": {
      "type": "boolean",
      "default": false,
      "title": "No segmented brain image flag",
      "description": "Don't generate segmented brain image output"
    },
    "vtk_mesh": {
      "type": "boolean",
      "default": false,
      "title": "VTK format brain surface mesh flag",
      "description": "Generate brain surface as mesh in .vtk format"
    },
    "head_radius": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Head Radius",
      "description": "head radius (mm not voxels); initial surface sphere is set to half of this"
    },
    "thresholding": {
      "type": "boolean",
      "default": false,
      "title": "Threshold segmented image flag",
      "description": "Apply thresholding to segmented brain image and mask"
    },
    "robust_iters": {
      "type": "boolean",
      "default": false,
      "title": "Robust iterations flag",
      "description": "More robust brain center estimation, by iterating BET with a changing center-of-gravity."
    },
    "residual_optic_cleanup": {
      "type": "boolean",
      "default": false,
      "title": "Residual optic cleanup flag",
      "description": "This attempts to cleanup residual eye and optic nerve voxels which bet2 can sometimes leave behind. This can be useful when running SIENA or SIENAX, for example. Various stages involving standard-space masking, morphpological operations and thresholdings are combined to produce a result which can often give better results than just running bet2."
    },
    "reduce_bias": {
      "type": "boolean",
      "default": false,
      "title": "Bias reduction flag",
      "description": "This attempts to reduce image bias, and residual neck voxels. This can be useful when running SIENA or SIENAX, for example. Various stages involving FAST segmentation-based bias field removal and standard-space masking are combined to produce a result which can often give better results than just running bet2."
    },
    "slice_padding": {
      "type": "boolean",
      "default": false,
      "title": "Slice padding flag",
      "description": "This can improve the brain extraction if only a few slices are present in the data (i.e., a small field of view in the Z direction). This is achieved by padding the end slices in both directions, copying the end slices several times, running bet2 and then removing the added slices."
    },
    "whole_set_mask": {
      "type": "boolean",
      "default": false,
      "title": "Mask-whole-set flag",
      "description": "This option uses bet2 to determine a brain mask on the basis of the first volume in a 4D data set, and applies this to the whole data set. This is principally intended for use on FMRI data, for example to remove eyeballs. Because it is normally important (in this application) that masking be liberal (ie that there be little risk of cutting out valid brain voxels) the -f threshold is reduced to 0.3, and also the brain mask is \"dilated\" slightly before being used."
    },
    "additional_surfaces": {
      "type": "boolean",
      "default": false,
      "title": "Additional surfaces flag",
      "description": "This runs both bet2 and betsurf programs in order to get the additional skull and scalp surfaces created by betsurf. This involves registering to standard space in order to allow betsurf to find the standard space masks it needs."
    },
    "additional_surfaces_t2": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Additional surfaces with T2",
      "description": "This is the same as -A except that a T2 image is also input, to further improve the estimated skull and scalp surfaces. As well as carrying out the standard space registration this also registers the T2 to the T1 input image."
    },
    "verbose": {
      "type": "boolean",
      "default": false,
      "title": "Verbose Flag",
      "description": "Switch on diagnostic messages"
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "title": "Debug Flag",
      "description": "Don't delete temporary intermediate images"
    }
  },
  "additionalProperties": false,
  "required": [
    "infile"
  ]
}