{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "dwi2fod",
  "description": "Estimate fibre orientation distributions from diffusion data using spherical deconvolution.\n\nThe spherical harmonic coefficients are stored according the conventions described the main documentation, which can be found at the following link: \nhttps://mrtrix.readthedocs.io/en/3.0.4/concepts/spherical_harmonics.html\n\nReferences:\n\n* If using csd algorithm:\nTournier, J.-D.; Calamante, F. & Connelly, A. Robust determination of the fibre orientation distribution in diffusion MRI: Non-negativity constrained super-resolved spherical deconvolution. NeuroImage, 2007, 35, 1459-1472\n\n* If using msmt_csd algorithm:\nJeurissen, B; Tournier, J-D; Dhollander, T; Connelly, A & Sijbers, J. Multi-tissue constrained spherical deconvolution for improved analysis of multi-shell diffusion MRI data. NeuroImage, 2014, 103, 411-426\n\nTournier, J.-D.; Calamante, F., Gadian, D.G. & Connelly, A. Direct estimation of the fiber orientation density function from diffusion-weighted MRI data using spherical deconvolution. NeuroImage, 2004, 23, 1176-1185",
  "type": "object",
  "properties": {
    "@type": {
      "const": "mrtrix/dwi2fod"
    },
    "grad": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "grad",
      "description": "Provide the diffusion-weighted gradient scheme used in the acquisition in a text file. This should be supplied as a 4xN text file with each line is in the format [ X Y Z b ], where [ X Y Z ] describe the direction of the applied gradient, and b gives the b-value in units of s/mm^2. If a diffusion gradient scheme is present in the input image header, the data provided with this option will be instead used."
    },
    "fslgrad": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "fslgrad"
            },
            "bvecs": {
              "type": "string",
              "x-styx-type": "file",
              "title": "bvecs",
              "description": "Provide the diffusion-weighted gradient scheme used in the acquisition in FSL bvecs/bvals format files. If a diffusion gradient scheme is present in the input image header, the data provided with this option will be instead used."
            },
            "bvals": {
              "type": "string",
              "x-styx-type": "file",
              "title": "bvals",
              "description": "Provide the diffusion-weighted gradient scheme used in the acquisition in FSL bvecs/bvals format files. If a diffusion gradient scheme is present in the input image header, the data provided with this option will be instead used."
            }
          },
          "additionalProperties": false,
          "title": "fslgrad",
          "description": "Provide the diffusion-weighted gradient scheme used in the acquisition in FSL bvecs/bvals format files. If a diffusion gradient scheme is present in the input image header, the data provided with this option will be instead used.",
          "required": [
            "bvecs",
            "bvals"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "fslgrad",
      "description": "Provide the diffusion-weighted gradient scheme used in the acquisition in FSL bvecs/bvals format files. If a diffusion gradient scheme is present in the input image header, the data provided with this option will be instead used."
    },
    "shells": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "shells",
      "description": "specify one or more b-values to use during processing, as a comma-separated list of the desired approximate b-values (b-values are clustered to allow for small deviations). Note that some commands are incompatible with multiple b-values, and will report an error if more than one b-value is provided. \nWARNING: note that, even though the b=0 volumes are never referred to as shells in the literature, they still have to be explicitly included in the list of b-values as provided to the -shell option! Several algorithms which include the b=0 volumes in their computations may otherwise return an undesired result."
    },
    "directions": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "directions",
      "description": "specify the directions over which to apply the non-negativity constraint (by default, the built-in 300 direction set is used). These should be supplied as a text file containing [ az el ] pairs for the directions."
    },
    "lmax": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "lmax",
      "description": "the maximum spherical harmonic order for the output FOD(s).For algorithms with multiple outputs, this should be provided as a comma-separated list of integers, one for each output image; for single-output algorithms, only a single integer should be provided. If omitted, the command will use the lmax of the corresponding response function (i.e based on its number of coefficients), up to a maximum of 8."
    },
    "mask": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "mask",
      "description": "only perform computation within the specified binary brain mask image."
    },
    "filter": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "filter",
      "description": "the linear frequency filtering parameters used for the initial linear spherical deconvolution step (default = [ 1 1 1 0 0 ]). These should be  supplied as a text file containing the filtering coefficients for each even harmonic order."
    },
    "neg_lambda": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "neg_lambda",
      "description": "the regularisation parameter lambda that controls the strength of the non-negativity constraint (default = 1)."
    },
    "norm_lambda": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "norm_lambda",
      "description": "the regularisation parameter lambda that controls the strength of the constraint on the norm of the solution (default = 1)."
    },
    "threshold": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "threshold",
      "description": "the threshold below which the amplitude of the FOD is assumed to be zero, expressed as an absolute amplitude (default = 0)."
    },
    "niter": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "niter",
      "description": "the maximum number of iterations to perform for each voxel (default = 50). Use '-niter 0' for a linear unconstrained spherical deconvolution."
    },
    "norm_lambda_1": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "norm_lambda",
      "description": "the regularisation parameter lambda that controls the strength of the constraint on the norm of the solution (default = 1e-10)."
    },
    "neg_lambda_1": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "neg_lambda",
      "description": "the regularisation parameter lambda that controls the strength of the non-negativity constraint (default = 1e-10)."
    },
    "predicted_signal": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "predicted_signal",
      "description": "output the predicted dwi image."
    },
    "strides": {
      "anyOf": [
        {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "@type": {
                  "const": "VariousString"
                },
                "obj": {
                  "type": "string",
                  "title": "Object",
                  "description": "String object."
                }
              },
              "additionalProperties": false,
              "required": [
                "@type",
                "obj"
              ]
            },
            {
              "type": "object",
              "properties": {
                "@type": {
                  "const": "VariousFile"
                },
                "obj": {
                  "type": "string",
                  "x-styx-type": "file",
                  "title": "Object",
                  "description": "File object."
                }
              },
              "additionalProperties": false,
              "required": [
                "@type",
                "obj"
              ]
            }
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "strides",
      "description": "specify the strides of the output data in memory; either as a comma-separated list of (signed) integers, or as a template image from which the strides shall be extracted and used. The actual strides produced will depend on whether the output image format can support it."
    },
    "info": {
      "type": "boolean",
      "default": false,
      "title": "info",
      "description": "display information messages."
    },
    "quiet": {
      "type": "boolean",
      "default": false,
      "title": "quiet",
      "description": "do not display information messages or progress status; alternatively, this can be achieved by setting the MRTRIX_QUIET environment variable to a non-empty string."
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "title": "debug",
      "description": "display debugging messages."
    },
    "force": {
      "type": "boolean",
      "default": false,
      "title": "force",
      "description": "force overwrite of output files (caution: using the same file as input and output might cause unexpected behaviour)."
    },
    "nthreads": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "nthreads",
      "description": "use this number of threads in multi-threaded applications (set to 0 to disable multi-threading)."
    },
    "config": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "@type": {
                "const": "config"
              },
              "key": {
                "type": "string",
                "title": "key",
                "description": "temporarily set the value of an MRtrix config file entry."
              },
              "value": {
                "type": "string",
                "title": "value",
                "description": "temporarily set the value of an MRtrix config file entry."
              }
            },
            "additionalProperties": false,
            "title": "config",
            "description": "temporarily set the value of an MRtrix config file entry.",
            "required": [
              "key",
              "value"
            ]
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "config",
      "description": "temporarily set the value of an MRtrix config file entry."
    },
    "help": {
      "type": "boolean",
      "default": false,
      "title": "help",
      "description": "display this information page and exit."
    },
    "version": {
      "type": "boolean",
      "default": false,
      "title": "version",
      "description": "display version information and exit."
    },
    "algorithm": {
      "type": "string",
      "title": "algorithm",
      "description": "the algorithm to use for FOD estimation. (options are: csd,msmt_csd)"
    },
    "dwi": {
      "type": "string",
      "x-styx-type": "file",
      "title": "dwi",
      "description": "the input diffusion-weighted image"
    },
    "response_odf": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "@type": {
            "const": "response_odf"
          },
          "response": {
            "type": "string",
            "x-styx-type": "file",
            "title": "response",
            "description": "input tissue response"
          },
          "odf": {
            "type": "string",
            "title": "odf",
            "description": "output ODF image"
          }
        },
        "additionalProperties": false,
        "title": "response_odf",
        "description": "pairs of input tissue response and output ODF images",
        "required": [
          "response",
          "odf"
        ]
      },
      "title": "response_odf",
      "description": "pairs of input tissue response and output ODF images"
    }
  },
  "additionalProperties": false,
  "required": [
    "algorithm",
    "dwi",
    "response_odf"
  ]
}