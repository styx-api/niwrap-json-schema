{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Estimate response function(s) for spherical deconvolution.\ndwi2response offers different algorithms for performing various types of response function estimation. The name of the algorithm must appear as the first argument on the command-line after \u00e2\u20ac\u02dcdwi2response\u00e2\u20ac\u2122. The subsequent arguments and options depend on the particular algorithm being invoked.\nEach algorithm available has its own help page, including necessary references; e.g. to see the help page of the 'fa' algorithm, type 'dwi2response fa'.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "mrtrix.dwi2response"
    },
    "algorithm": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "dhollander"
            },
            "input": {
              "type": "string",
              "x-styx-type": "file",
              "title": "input",
              "description": "Input DWI dataset"
            },
            "out_sfwm": {
              "type": "string",
              "title": "out_sfwm",
              "description": "Output single-fibre WM response function text file"
            },
            "out_gm": {
              "type": "string",
              "title": "out_gm",
              "description": "Output GM response function text file"
            },
            "out_csf": {
              "type": "string",
              "title": "out_csf",
              "description": "Output CSF response function text file"
            },
            "erode": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "erode",
              "description": "Number of erosion passes to apply to initial (whole brain) mask. Set to 0 to not erode the brain mask. (default: 3)"
            },
            "fa": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "fa",
              "description": "FA threshold for crude WM versus GM-CSF separation. (default: 0.2)"
            },
            "sfwm": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "sfwm",
              "description": "Final number of single-fibre WM voxels to select, as a percentage of refined WM. (default: 0.5 per cent)"
            },
            "gm": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "gm",
              "description": "Final number of GM voxels to select, as a percentage of refined GM. (default: 2 per cent)"
            },
            "csf": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "csf",
              "description": "Final number of CSF voxels to select, as a percentage of refined CSF. (default: 10 per cent)"
            },
            "wm_algo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "wm_algo",
              "description": "Use external dwi2response algorithm for WM single-fibre voxel selection (options: fa, tax, tournier) (default: built-in Dhollander 2019)"
            }
          },
          "additionalProperties": false,
          "description": "Unsupervised estimation of WM, GM and CSF response functions that does not require a T1 image (or segmentation thereof).\nThis is an improved version of the Dhollander et al. (2016) algorithm for unsupervised estimation of WM, GM and CSF response functions, which includes the Dhollander et al. (2019) improvements for single-fibre WM response function estimation (prior to this update, the \"dwi2response tournier\" algorithm had been utilised specifically for the single-fibre WM response function estimation step).",
          "required": [
            "input",
            "out_sfwm",
            "out_gm",
            "out_csf"
          ]
        },
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "fa"
            },
            "input": {
              "type": "string",
              "x-styx-type": "file",
              "title": "input",
              "description": "The input DWI"
            },
            "output": {
              "type": "string",
              "title": "output",
              "description": "The output response function text file"
            },
            "erode": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "erode",
              "description": "Number of brain mask erosion steps to apply prior to threshold (not used if mask is provided manually)"
            },
            "number": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "number",
              "description": "The number of highest-FA voxels to use"
            },
            "threshold": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "threshold",
              "description": "Apply a hard FA threshold, rather than selecting the top voxels"
            }
          },
          "additionalProperties": false,
          "description": "Use the old FA-threshold heuristic for single-fibre voxel selection and response function estimation.",
          "required": [
            "input",
            "output"
          ]
        },
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "manual"
            },
            "input": {
              "type": "string",
              "x-styx-type": "file",
              "title": "input",
              "description": "The input DWI"
            },
            "in_voxels": {
              "type": "string",
              "x-styx-type": "file",
              "title": "in_voxels",
              "description": "Input voxel selection mask"
            },
            "output": {
              "type": "string",
              "title": "output",
              "description": "Output response function text file"
            },
            "dirs": {
              "anyOf": [
                {
                  "type": "string",
                  "x-styx-type": "file"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "dirs",
              "description": "Manually provide the fibre direction in each voxel (a tensor fit will be used otherwise)"
            }
          },
          "additionalProperties": false,
          "description": "Derive a response function using an input mask image alone (i.e. pre-selected voxels).",
          "required": [
            "input",
            "in_voxels",
            "output"
          ]
        },
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "msmt_5tt"
            },
            "input": {
              "type": "string",
              "x-styx-type": "file",
              "title": "input",
              "description": "The input DWI"
            },
            "in_5tt": {
              "type": "string",
              "x-styx-type": "file",
              "title": "in_5tt",
              "description": "Input co-registered 5TT image"
            },
            "out_wm": {
              "type": "string",
              "title": "out_wm",
              "description": "Output WM response text file"
            },
            "out_gm": {
              "type": "string",
              "title": "out_gm",
              "description": "Output GM response text file"
            },
            "out_csf": {
              "type": "string",
              "title": "out_csf",
              "description": "Output CSF response text file"
            },
            "dirs": {
              "anyOf": [
                {
                  "type": "string",
                  "x-styx-type": "file"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "dirs",
              "description": "Manually provide the fibre direction in each voxel (a tensor fit will be used otherwise)"
            },
            "fa": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "fa",
              "description": "Upper fractional anisotropy threshold for GM and CSF voxel selection (default: 0.2)"
            },
            "pvf": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "pvf",
              "description": "Partial volume fraction threshold for tissue voxel selection (default: 0.95)"
            },
            "wm_algo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "wm_algo",
              "description": "algorithm dwi2response algorithm to use for WM single-fibre voxel selection (options: fa, tax, tournier; default: tournier)"
            },
            "sfwm_fa_threshold": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "sfwm_fa_threshold",
              "description": "Sets -wm_algo to fa and allows to specify a hard FA threshold for single-fibre WM voxels, which is passed to the -threshold option of the fa algorithm (warning: overrides -wm_algo option)"
            }
          },
          "additionalProperties": false,
          "description": "Derive MSMT-CSD tissue response functions based on a co-registered five-tissue-type (5TT) image",
          "required": [
            "input",
            "in_5tt",
            "out_wm",
            "out_gm",
            "out_csf"
          ]
        },
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "tax"
            },
            "input": {
              "type": "string",
              "x-styx-type": "file",
              "title": "input",
              "description": "The input DWI"
            },
            "output": {
              "type": "string",
              "title": "output",
              "description": "The output response function text file"
            },
            "peak_ratio": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "peak_ratio",
              "description": "Second-to-first-peak amplitude ratio threshold"
            },
            "max_iters": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "max_iters",
              "description": "Maximum number of iterations"
            },
            "convergence": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "convergence",
              "description": "Percentile change in any RF coefficient required to continue iterating"
            }
          },
          "additionalProperties": false,
          "description": "Use the Tax et al. (2014) recursive calibration algorithm for single-fibre voxel selection and response function estimation.",
          "required": [
            "input",
            "output"
          ]
        },
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "tournier"
            },
            "input": {
              "type": "string",
              "x-styx-type": "file",
              "title": "input",
              "description": "The input DWI"
            },
            "output": {
              "type": "string",
              "title": "output",
              "description": "The output response function text file"
            },
            "number": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "number",
              "description": "Number of single-fibre voxels to use when calculating response function"
            },
            "iter_voxels": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "iter_voxels",
              "description": "Number of single-fibre voxels to select when preparing for the next iteration (default = 10 x value given in -number)"
            },
            "dilate": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "dilate",
              "description": "Number of mask dilation steps to apply when deriving voxel mask to test in the next iteration"
            },
            "max_iters": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "max_iters",
              "description": "Maximum number of iterations"
            }
          },
          "additionalProperties": false,
          "description": "Use the Tournier et al. (2013) iterative algorithm for single-fibre voxel selection and response function estimation.",
          "required": [
            "input",
            "output"
          ]
        }
      ],
      "title": "algorithm",
      "description": "Select the algorithm to be used to complete the script operation; additional details and options become available once an algorithm is nominated. Options are: dhollander, fa, manual, msmt_5tt, tax, tournier."
    },
    "grad": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "grad",
      "description": "Provide the diffusion gradient table in MRtrix format"
    },
    "fslgrad": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "fslgrad"
            },
            "bvecs": {
              "type": "string",
              "x-styx-type": "file",
              "title": "bvecs",
              "description": "Provide the diffusion-weighted gradient scheme used in the acquisition in FSL bvecs/bvals format files. If a diffusion gradient scheme is present in the input image header, the data provided with this option will be instead used."
            },
            "bvals": {
              "type": "string",
              "x-styx-type": "file",
              "title": "bvals",
              "description": "Provide the diffusion-weighted gradient scheme used in the acquisition in FSL bvecs/bvals format files. If a diffusion gradient scheme is present in the input image header, the data provided with this option will be instead used."
            }
          },
          "additionalProperties": false,
          "description": "Provide the diffusion gradient table in FSL bvecs/bvals format",
          "required": [
            "bvecs",
            "bvals"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Provide the diffusion gradient table in FSL bvecs/bvals format"
    },
    "mask": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "mask",
      "description": "Only process voxels within the specified binary brain mask image."
    },
    "voxels": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "voxels",
      "description": "Output an image showing the final voxel selection(s)"
    },
    "shells": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "shells",
      "description": "b-value(s) to use in response function estimation (comma-separated list in case of multiple b-values, b=0 must be included explicitly)"
    },
    "lmax": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "lmax",
      "description": "maximum harmonic degree(s) for response function estimation (comma-separated list in case of multiple b-values)."
    },
    "nocleanup": {
      "type": "boolean",
      "default": false,
      "title": "nocleanup",
      "description": "do not delete intermediate files during script execution, and do not delete scratch directory at script completion."
    },
    "scratch": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "scratch",
      "description": "manually specify the path in which to generate the scratch directory."
    },
    "continue": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "continue",
      "description": "continue the script from a previous execution; must provide the scratch directory path, and the name of the last successfully-generated file."
    },
    "info": {
      "type": "boolean",
      "default": false,
      "title": "info",
      "description": "display information messages."
    },
    "quiet": {
      "type": "boolean",
      "default": false,
      "title": "quiet",
      "description": "do not display information messages or progress status; alternatively, this can be achieved by setting the MRTRIX_QUIET environment variable to a non-empty string."
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "title": "debug",
      "description": "display debugging messages."
    },
    "force": {
      "type": "boolean",
      "default": false,
      "title": "force",
      "description": "force overwrite of output files (caution: using the same file as input and output might cause unexpected behaviour)."
    },
    "nthreads": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "nthreads",
      "description": "use this number of threads in multi-threaded applications (set to 0 to disable multi-threading)."
    },
    "config": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "@type": {
                "const": "config"
              },
              "key": {
                "type": "string",
                "title": "key",
                "description": "temporarily set the value of an MRtrix config file entry."
              },
              "value": {
                "type": "string",
                "title": "value",
                "description": "temporarily set the value of an MRtrix config file entry."
              }
            },
            "additionalProperties": false,
            "description": "temporarily set the value of an MRtrix config file entry.",
            "required": [
              "key",
              "value"
            ]
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "temporarily set the value of an MRtrix config file entry."
    },
    "help": {
      "type": "boolean",
      "default": false,
      "title": "help",
      "description": "display this information page and exit."
    },
    "version": {
      "type": "boolean",
      "default": false,
      "title": "version",
      "description": "display version information and exit."
    }
  },
  "additionalProperties": false,
  "required": [
    "algorithm"
  ]
}