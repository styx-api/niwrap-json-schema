{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "tckdfc",
  "description": "Perform the Track-Weighted Dynamic Functional Connectivity (TW-dFC) method.\n\nThis command generates a Track-Weighted Image (TWI), where the contribution from each streamline to the image is the Pearson correlation between the fMRI time series at the streamline endpoints.\n\nThe output image can be generated in one of two ways (note that one of these two command-line options MUST be provided): \n\n- \"Static\" functional connectivity (-static option): Each streamline contributes to a static 3D output image based on the correlation between the signals at the streamline endpoints using the entirety of the input time series.\n\n- \"Dynamic\" functional connectivity (-dynamic option): The output image is a 4D image, with the same number of volumes as the input fMRI time series. For each volume, the contribution from each streamline is calculated based on a finite-width sliding time window, centred at the timepoint corresponding to that volume.\n\nNote that the -backtrack option in this command is similar, but not precisely equivalent, to back-tracking as can be used with Anatomically-Constrained Tractography (ACT) in the tckgen command. However, here the feature does not change the streamlines trajectories in any way; it simply enables detection of the fact that the input fMRI image may not contain a valid timeseries underneath the streamline endpoint, and where this occurs, searches from the streamline endpoint inwards along the streamline trajectory in search of a valid timeseries to sample from the input image.\n\nReferences:\n\nCalamante, F.; Smith, R.E.; Liang, X.; Zalesky, A.; Connelly, A Track-weighted dynamic functional connectivity (TW-dFC): a new method to study time-resolved functional connectivity. Brain Struct Funct, 2017, doi: 10.1007/s00429-017-1431-1",
  "type": "object",
  "properties": {
    "@type": {
      "const": "mrtrix.tckdfc"
    },
    "static": {
      "type": "boolean",
      "default": false,
      "title": "static",
      "description": "generate a \"static\" (3D) output image."
    },
    "dynamic": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "mrtrix.tckdfc.dynamic"
            },
            "shape": {
              "type": "string",
              "title": "shape",
              "description": "generate a \"dynamic\" (4D) output image; must additionally provide the shape and width (in volumes) of the sliding window."
            },
            "width": {
              "type": "integer",
              "title": "width",
              "description": "generate a \"dynamic\" (4D) output image; must additionally provide the shape and width (in volumes) of the sliding window."
            }
          },
          "additionalProperties": false,
          "title": "dynamic",
          "description": "generate a \"dynamic\" (4D) output image; must additionally provide the shape and width (in volumes) of the sliding window.",
          "required": [
            "shape",
            "width"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "dynamic",
      "description": "generate a \"dynamic\" (4D) output image; must additionally provide the shape and width (in volumes) of the sliding window."
    },
    "template": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "template",
      "description": "an image file to be used as a template for the output (the output image will have the same transform and field of view)."
    },
    "vox": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "vox",
      "description": "provide either an isotropic voxel size (in mm), or comma-separated list of 3 voxel dimensions."
    },
    "stat_vox": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "stat_vox",
      "description": "define the statistic for choosing the final voxel intensities for a given contrast type given the individual values from the tracks passing through each voxel\nOptions are: sum, min, mean, max (default: mean)"
    },
    "backtrack": {
      "type": "boolean",
      "default": false,
      "title": "backtrack",
      "description": "if no valid timeseries is found at the streamline endpoint, back-track along the streamline trajectory until a valid timeseries is found"
    },
    "upsample": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "upsample",
      "description": "upsample the tracks by some ratio using Hermite interpolation before mapping (if omitted, an appropriate ratio will be determined automatically)"
    },
    "info": {
      "type": "boolean",
      "default": false,
      "title": "info",
      "description": "display information messages."
    },
    "quiet": {
      "type": "boolean",
      "default": false,
      "title": "quiet",
      "description": "do not display information messages or progress status; alternatively, this can be achieved by setting the MRTRIX_QUIET environment variable to a non-empty string."
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "title": "debug",
      "description": "display debugging messages."
    },
    "force": {
      "type": "boolean",
      "default": false,
      "title": "force",
      "description": "force overwrite of output files (caution: using the same file as input and output might cause unexpected behaviour)."
    },
    "nthreads": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "nthreads",
      "description": "use this number of threads in multi-threaded applications (set to 0 to disable multi-threading)."
    },
    "config": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "@type": {
                "const": "mrtrix.tckdfc.config"
              },
              "key": {
                "type": "string",
                "title": "key",
                "description": "temporarily set the value of an MRtrix config file entry."
              },
              "value": {
                "type": "string",
                "title": "value",
                "description": "temporarily set the value of an MRtrix config file entry."
              }
            },
            "additionalProperties": false,
            "title": "config",
            "description": "temporarily set the value of an MRtrix config file entry.",
            "required": [
              "key",
              "value"
            ]
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "config",
      "description": "temporarily set the value of an MRtrix config file entry."
    },
    "help": {
      "type": "boolean",
      "default": false,
      "title": "help",
      "description": "display this information page and exit."
    },
    "version": {
      "type": "boolean",
      "default": false,
      "title": "version",
      "description": "display version information and exit."
    },
    "tracks": {
      "type": "string",
      "x-styx-type": "file",
      "title": "tracks",
      "description": "the input track file."
    },
    "fmri": {
      "type": "string",
      "x-styx-type": "file",
      "title": "fmri",
      "description": "the pre-processed fMRI time series"
    },
    "output": {
      "type": "string",
      "title": "output",
      "description": "the output TW-dFC image"
    }
  },
  "additionalProperties": false,
  "required": [
    "tracks",
    "fmri",
    "output"
  ]
}