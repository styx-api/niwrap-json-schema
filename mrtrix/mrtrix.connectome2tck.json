{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Extract streamlines from a tractogram based on their assignment to parcellated nodes.\n\nThe compulsory input file \"assignments_in\" should contain a text file where there is one row for each streamline, and each row contains a list of numbers corresponding to the parcels to which that streamline was assigned (most typically there will be two entries per streamline, one for each endpoint; but this is not strictly a requirement). This file will most typically be generated using the tck2connectome command with the -out_assignments option.\n\nReferences:\n\n",
  "type": "object",
  "properties": {
    "@type": {
      "const": "mrtrix.connectome2tck"
    },
    "nodes": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "nodes",
      "description": "only select tracks that involve a set of nodes of interest (provide as a comma-separated list of integers)"
    },
    "exclusive": {
      "type": "boolean",
      "default": false,
      "title": "exclusive",
      "description": "only select tracks that exclusively connect nodes from within the list of nodes of interest"
    },
    "files": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "files",
      "description": "select how the resulting streamlines will be grouped in output files. Options are: per_edge, per_node, single (default: per_edge)"
    },
    "exemplars": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "exemplars",
      "description": "generate a mean connection exemplar per edge, rather than keeping all streamlines (the parcellation node image must be provided in order to constrain the exemplar endpoints)"
    },
    "keep_unassigned": {
      "type": "boolean",
      "default": false,
      "title": "keep_unassigned",
      "description": "by default, the program discards those streamlines that are not successfully assigned to a node. Set this option to generate corresponding outputs containing these streamlines (labelled as node index 0)"
    },
    "keep_self": {
      "type": "boolean",
      "default": false,
      "title": "keep_self",
      "description": "by default, the program will not output streamlines that connect to the same node at both ends. Set this option to instead keep these self-connections."
    },
    "tck_weights_in": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "tck_weights_in",
      "description": "specify a text scalar file containing the streamline weights"
    },
    "prefix_tck_weights_out": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "prefix_tck_weights_out",
      "description": "provide a prefix for outputting a text file corresponding to each output file, each containing only the streamline weights relevant for that track file"
    },
    "info": {
      "type": "boolean",
      "default": false,
      "title": "info",
      "description": "display information messages."
    },
    "quiet": {
      "type": "boolean",
      "default": false,
      "title": "quiet",
      "description": "do not display information messages or progress status; alternatively, this can be achieved by setting the MRTRIX_QUIET environment variable to a non-empty string."
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "title": "debug",
      "description": "display debugging messages."
    },
    "force": {
      "type": "boolean",
      "default": false,
      "title": "force",
      "description": "force overwrite of output files (caution: using the same file as input and output might cause unexpected behaviour)."
    },
    "nthreads": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "nthreads",
      "description": "use this number of threads in multi-threaded applications (set to 0 to disable multi-threading)."
    },
    "config": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "@type": {
                "const": "config"
              },
              "key": {
                "type": "string",
                "title": "key",
                "description": "temporarily set the value of an MRtrix config file entry."
              },
              "value": {
                "type": "string",
                "title": "value",
                "description": "temporarily set the value of an MRtrix config file entry."
              }
            },
            "additionalProperties": false,
            "description": "temporarily set the value of an MRtrix config file entry.",
            "required": [
              "key",
              "value"
            ]
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "temporarily set the value of an MRtrix config file entry."
    },
    "help": {
      "type": "boolean",
      "default": false,
      "title": "help",
      "description": "display this information page and exit."
    },
    "version": {
      "type": "boolean",
      "default": false,
      "title": "version",
      "description": "display version information and exit."
    },
    "tracks_in": {
      "type": "string",
      "x-styx-type": "file",
      "title": "tracks_in",
      "description": "the input track file"
    },
    "assignments_in": {
      "type": "string",
      "x-styx-type": "file",
      "title": "assignments_in",
      "description": "input text file containing the node assignments for each streamline"
    },
    "prefix_out": {
      "type": "string",
      "title": "prefix_out",
      "description": "the output file / prefix"
    }
  },
  "additionalProperties": false,
  "required": [
    "tracks_in",
    "assignments_in",
    "prefix_out"
  ]
}