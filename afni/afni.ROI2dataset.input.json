{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "ROI2dataset",
  "description": "Transforms a series of ROI files to a node dataset",
  "type": "object",
  "properties": {
    "@type": {
      "const": "afni/ROI2dataset"
    },
    "prefix": {
      "type": "string",
      "title": "Prefix",
      "description": "Prefix of output dataset."
    },
    "input_rois": {
      "type": "array",
      "items": {
        "type": "string",
        "x-styx-type": "file"
      },
      "title": "Input ROI files",
      "description": "ROI files to turn into a data set (space-separated list). This parameter MUST be the last one on command line."
    },
    "keep_separate": {
      "type": "boolean",
      "default": false,
      "title": "Keep separate flag",
      "description": "Output one column (sub-brick) for each ROI value."
    },
    "nodelist": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Nodelist",
      "description": "Prefix for a set of .1D files that contain a list of node indices in the order they appear in an ROI."
    },
    "nodelist_nodups": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Nodelist without duplicates",
      "description": "Prefix for a set of .1D files that contain a list of node indices in the order they appear in an ROI, with duplicate nodes removed."
    },
    "nodelist_with_roival": {
      "type": "boolean",
      "default": false,
      "title": "Nodelist with ROI value",
      "description": "Also add the ROI value as a second column in .1D files output by -nodelist."
    },
    "label_dset": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Label dataset",
      "description": "Write a label dataset instead of a simple dataset. Sets output format to NIML."
    },
    "output_format": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output format",
      "description": "Output format of dataset. One of: ni_bi, ni_as, 1D"
    },
    "domain_parent_id": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Domain parent ID",
      "description": "Idcode of domain parent. Only ROIs with the same domain parent are included in the output."
    },
    "pad_to_node": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Pad to node",
      "description": "Output a full dataset from node 0 to node max_index (total of max_index + 1 nodes)."
    },
    "pad_label": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Pad label",
      "description": "Use padding_label (an integer) to label nodes not part of any ROI. Default is 0."
    }
  },
  "additionalProperties": false,
  "required": [
    "prefix",
    "input_rois",
    "@type"
  ]
}