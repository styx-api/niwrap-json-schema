{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "@DiceMetric",
  "description": "Computes Dice Metric between BASE and each of the DSET volumes",
  "type": "object",
  "properties": {
    "@type": {
      "const": "afni.@DiceMetric"
    },
    "base": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Base Segmentation",
      "description": "Name of base (reference) segmentation"
    },
    "dsets": {
      "type": "array",
      "items": {
        "type": "string",
        "x-styx-type": "file"
      },
      "title": "Dataset Segmentation",
      "description": "Data sets for which the Dice Metric with BASE is computed. This should be the last option on the command line."
    },
    "max_roi": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Maximum ROI Index",
      "description": "The maximum possible ROI index. Default is 12 or based on LTFILE if specified."
    },
    "labeltable": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Label Table File",
      "description": "If given, the labeltable is used to set the default MAX_ROI parameter. Also, this option forces an output for each key in the LTFILE."
    },
    "forceoutput": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Force Output File",
      "description": "If given, force output for each class in LTFILE."
    },
    "echo": {
      "type": "boolean",
      "default": false,
      "title": "Echo Flag",
      "description": "Set echo."
    },
    "save_match": {
      "type": "boolean",
      "default": false,
      "title": "Save Match Volume",
      "description": "Save volume showing BASE*equals(BASE,DSET)."
    },
    "save_diff": {
      "type": "boolean",
      "default": false,
      "title": "Save Diff Volume",
      "description": "Save volume showing BASE*(1-equals(BASE,DSET))."
    },
    "do_not_mask_by_base": {
      "type": "boolean",
      "default": false,
      "title": "Do Not Mask by Base",
      "description": "Do not mask dset by step(base) before computing Dice coefficient."
    },
    "mask_by_base": {
      "type": "boolean",
      "default": false,
      "title": "Mask by Base",
      "description": "Mask dset by the step(base) before computing Dice coefficient."
    },
    "prefix": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output Prefix",
      "description": "Use PREFIX for the output table. Default is separate results for each dset to stdout."
    },
    "ignore_bad": {
      "type": "boolean",
      "default": false,
      "title": "Ignore Bad Scenarios",
      "description": "Warn if encountering bad scenarios, but do not create a zero entry."
    },
    "keep_tmp": {
      "type": "boolean",
      "default": false,
      "title": "Keep Temporary Files",
      "description": "Keep temporary files for debugging. Note that you should delete temporary files before rerunning the script."
    }
  },
  "additionalProperties": false,
  "required": [
    "base",
    "dsets"
  ]
}