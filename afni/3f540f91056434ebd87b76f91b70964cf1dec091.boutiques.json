{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Changes some of the information inside a 3D dataset's header",
  "type": "object",
  "properties": {
    "@type": {
      "const": "afni.3drefit"
    },
    "atrcopy": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Atrcopy",
      "description": "(file, string). Copy afni header attribute from the given file into the header of the dataset(s) being modified. for more information on afni header attributes, see documentation file readme.attributes. more than one '-atrcopy' option can be used. for afni advanced users only. do not use -atrcopy or -atrstring with other modification options. see also -copyaux."
    },
    "atrfloat": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Atrfloat",
      "description": "(a string, a string). Create or modify floating point attributes. the input values may be specified as a single string in quotes or as a 1d filename or string, example '1 0.2 0 0 -0.2 1 0 0 0 0 1 0' or flipz.1d or '1d:1,0.2,2@0,-0.2,1,2@0,2@0,1,0'."
    },
    "atrint": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Atrint",
      "description": "(a string, a string). Create or modify integer attributes. the input values may be specified as a single string in quotes or as a 1d filename or string, example '1 0 0 0 0 1 0 0 0 0 1 0' or flipz.1d or '1d:1,0,2@0,-0,1,2@0,2@0,1,0'."
    },
    "atrstring": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Atrstring",
      "description": "(a string, a string). Copy the last given string into the dataset(s) being modified, giving it the attribute name given by the last string.to be safe, the last string should be in quotes."
    },
    "deoblique": {
      "type": "boolean",
      "default": false,
      "title": "Deoblique",
      "description": "Replace current transformation matrix with cardinal matrix."
    },
    "duporigin_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Duporigin file",
      "description": "Copies the xorigin, yorigin, and zorigin values from the header of the given dataset."
    },
    "in_file": {
      "type": "string",
      "title": "In file",
      "description": "Input file to 3drefit."
    },
    "nosaveatr": {
      "type": "boolean",
      "default": false,
      "title": "Nosaveatr",
      "description": "Opposite of -saveatr."
    },
    "saveatr": {
      "type": "boolean",
      "default": false,
      "title": "Saveatr",
      "description": "(default) copy the attributes that are known to afni into the dset->dblk structure thereby forcing changes to known attributes to be present in the output. this option only makes sense with -atrcopy."
    },
    "space": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Space",
      "description": "'tlrc' or 'mni' or 'orig'. Associates the dataset with a specific template type, e.g. tlrc, mni, orig."
    },
    "xdel": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Xdel",
      "description": "New x voxel dimension in mm."
    },
    "xorigin": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Xorigin",
      "description": "X distance for edge voxel offset."
    },
    "xyzscale": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Xyzscale",
      "description": "Scale the size of the dataset voxels by the given factor."
    },
    "ydel": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Ydel",
      "description": "New y voxel dimension in mm."
    },
    "yorigin": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Yorigin",
      "description": "Y distance for edge voxel offset."
    },
    "zdel": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Zdel",
      "description": "New z voxel dimension in mm."
    },
    "zorigin": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Zorigin",
      "description": "Z distance for edge voxel offset."
    }
  },
  "additionalProperties": false,
  "required": [
    "in_file"
  ]
}