{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "A program to perform isosurface extraction from a volume.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "afni.IsoSurface"
    },
    "input_vol": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Input Volume",
      "description": "Input volume file."
    },
    "shape_spec": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Shape Specification",
      "description": "Built-in shape specification."
    },
    "isorois": {
      "type": "boolean",
      "default": false,
      "title": "Isosurface for unique values",
      "description": "Create isosurface for each unique value in the input volume."
    },
    "isoval": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Isoval",
      "description": "Create isosurface where volume = V."
    },
    "isorange": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Isorange",
      "description": "Create isosurface where V0 <= volume < V1."
    },
    "isocmask": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Isocmask",
      "description": "Create isosurface where MASK_COM != 0."
    },
    "output_prefix": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output Prefix",
      "description": "Prefix of output surface file."
    },
    "tsmooth": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Taubin Smoothing",
      "description": "Smooth resultant surface using Taubin smoothing with parameters KPB and NITER."
    },
    "debug": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Debug",
      "description": "Debug levels of 0 (default), 1, 2, 3."
    },
    "autocrop": {
      "type": "boolean",
      "default": false,
      "title": "Autocrop",
      "description": "Crop input volume before extraction."
    },
    "remesh": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Remesh",
      "description": "Remesh the surface(s)."
    },
    "xform": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Transform",
      "description": "Transform to apply to volume values before extracting."
    },
    "novolreg": {
      "type": "boolean",
      "default": false,
      "title": "No Volreg Transform",
      "description": "Ignore any Rotate, Volreg, Tagalign, or WarpDrive transformations."
    },
    "noxform": {
      "type": "boolean",
      "default": false,
      "title": "No Transform",
      "description": "Same as -novolreg."
    }
  },
  "additionalProperties": false
}