{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Computes histograms using functions for generating priors",
  "type": "object",
  "properties": {
    "__STYXTYPE__": {
      "const": "3dHist"
    },
    "input": {
      "type": "string",
      "title": "Input dataset",
      "description": "Dataset providing values for histogram."
    },
    "dind_subbrick": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Sub-brick number",
      "description": "Use sub-brick SB from the input rather than 0"
    },
    "mask_dset": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask dataset",
      "description": "Provide mask dataset to select subset of input."
    },
    "mask_range": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask range",
      "description": "Specify the range of values to consider from MSET. Default is anything non-zero"
    },
    "cmask": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Cmask expression",
      "description": "Provide cmask expression. Voxels where expression is 0 are excluded from computations."
    },
    "hist_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Histogram file",
      "description": "Read this previously created histogram instead of forming one from DSET."
    },
    "prefix": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output prefix",
      "description": "Write histogram to niml file called PREF.niml.hist"
    },
    "equalized": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Equalized output",
      "description": "Write a histogram equalized version of the input dataset."
    },
    "nbin": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Number of bins",
      "description": "Use K bins."
    },
    "min": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Minimum intensity",
      "description": "Minimum intensity."
    },
    "max": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Maximum intensity",
      "description": "Maximum intensity."
    },
    "binwidth": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Bin width",
      "description": "Bin width."
    },
    "ignore_out": {
      "type": "boolean",
      "default": false,
      "title": "Ignore out of range samples",
      "description": "Do not count samples outside the user specified range."
    },
    "range_hist": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Range histogram file",
      "description": "Use previously created histogram to set range and binwidth parameters."
    },
    "showhist": {
      "type": "boolean",
      "default": false,
      "title": "Show histogram",
      "description": "Display histogram to stdout."
    },
    "at_val": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Histogram value at",
      "description": "Set the value at which you want histogram values."
    },
    "get_params": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Histogram parameters to get",
      "description": "Return the desired properties at a given value. You can select multiple properties."
    },
    "voxvol": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Voxel volume",
      "description": "Specify voxel volume in mm^3. To be used with upvol."
    },
    "val_at": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Value at histogram property",
      "description": "Return the value where histogram property PAR is equal to PARVAL. PAR can be: cdf, rcdf, ncdf, nrcdf, upvol."
    },
    "quiet": {
      "type": "boolean",
      "default": false,
      "title": "Quiet output",
      "description": "Return a concise output to simplify parsing."
    }
  },
  "additionalProperties": false,
  "required": [
    "input"
  ]
}