{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Register input volumes to a base volume using AFNI 3dvolreg command",
  "type": "object",
  "properties": {
    "__STYXTYPE__": {
      "const": "3dvolreg"
    },
    "copyorigin": {
      "type": "boolean",
      "default": false,
      "title": "Copyorigin",
      "description": "Copy base file origin coords to output."
    },
    "twopass": {
      "type": "boolean",
      "default": false,
      "title": "twopass",
      "description": "Do two passes of the registration algorithm"
    },
    "Fourier": {
      "type": "boolean",
      "default": false,
      "title": "Fourier",
      "description": "Perform the alignments using Fourier interpolation."
    },
    "in_weight_volume": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "In weight volume",
      "description": "(file or string, an integer) or file or string. Weights for each voxel specified by a file with an optional volume number (defaults to 0)."
    },
    "in_weight_volume_2": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "In weight volume",
      "description": "(file or string, an integer) or file or string. Weights for each voxel specified by a file with an optional volume number (defaults to 0)."
    },
    "interp": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Interp",
      "description": "'fourier' or 'cubic' or 'heptic' or 'quintic' or 'linear'. Spatial interpolation methods [default = heptic]."
    },
    "num_threads": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Num threads",
      "description": "Set number of threads."
    },
    "outputtype": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Outputtype",
      "description": "'nifti' or 'afni' or 'nifti_gz'. Afni output filetype."
    },
    "timeshift": {
      "type": "boolean",
      "default": false,
      "title": "Timeshift",
      "description": "Time shift to mean slice time offset."
    },
    "verbose": {
      "type": "boolean",
      "default": false,
      "title": "Verbose",
      "description": "More detailed description of the process."
    },
    "basefile": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Basefile",
      "description": "Base file for registration."
    },
    "zpad": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Zpad",
      "description": "Zeropad around the edges by 'n' voxels during rotations."
    },
    "prefix": {
      "type": "string",
      "title": "prefix",
      "description": "Prefix"
    },
    "Maxdisp1d": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Maxdisp1d",
      "description": "Do '-maxdisp' and also write the max displacement for each sub-brick into file 'mm' in 1D (columnar) format."
    },
    "in_file": {
      "type": "string",
      "title": "In file",
      "description": "Input file to 3dvolreg."
    }
  },
  "additionalProperties": false,
  "required": [
    "prefix",
    "in_file"
  ]
}