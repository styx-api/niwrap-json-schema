{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "3dROIMaker",
  "description": "Create a labelled set of ROIs from input data, useful in combining functional and tractographic/structural data.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "afni/3dROIMaker"
    },
    "inset": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Input dataset",
      "description": "3D volume(s) of values, especially functionally-derived quantities like correlation values or ICA Z-scores."
    },
    "thresh": {
      "type": "number",
      "title": "Threshold value",
      "description": "Threshold for values in INSET, used to create ROI islands from the 3D volume's sea of values."
    },
    "prefix": {
      "type": "string",
      "title": "Output prefix",
      "description": "Prefix of output name, with output files being: PREFIX_GM* and PREFIX_GMI*"
    },
    "refset": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Reference dataset",
      "description": "3D (or multi-subbrick) volume containing integer values with which to label specific GM ROIs after thresholding."
    },
    "volthr": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Volume threshold",
      "description": "Minimum size a cluster of voxels must have in order to remain a GM ROI after thresholding. Can reduce 'noisy' clusters."
    },
    "only_some_top": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Keep top N voxels",
      "description": "Restrict each found region to keep only N voxels with the highest inset values."
    },
    "only_conn_top": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Keep top N contiguous voxels",
      "description": "Select N max contiguous voxels in a region starting from peak voxel and expanding."
    },
    "inflate": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Inflation size",
      "description": "Number of voxels to pad each found ROI in order to turn GM ROIs into inflated (GMI) ROIs."
    },
    "trim_off_wm": {
      "type": "boolean",
      "default": false,
      "title": "Trim off WM",
      "description": "Trim the INSET to exclude voxels in WM by excluding those which overlap an input WM skeleton."
    },
    "wm_skel": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "WM skeleton",
      "description": "3D volume containing info of WM, as might be defined from an FA map or anatomical segmentation."
    },
    "skel_thr": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Skeleton threshold",
      "description": "Threshold value for WM skeleton if it is not a mask."
    },
    "skel_stop": {
      "type": "boolean",
      "default": false,
      "title": "Stop at WM skeleton",
      "description": "Stop inflation at locations which are already on WM skeleton."
    },
    "skel_stop_strict": {
      "type": "boolean",
      "default": false,
      "title": "Strictly stop at WM skeleton",
      "description": "Do not allow any inflation into the skel-region."
    },
    "csf_skel": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "CSF skeleton",
      "description": "3D volume containing info of CSF. Info must be a binary mask already."
    },
    "mask": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Input mask",
      "description": "Mask within which to apply threshold. Useful if the MINTHR is a negative value."
    },
    "neigh_upto_vert": {
      "type": "boolean",
      "default": false,
      "title": "Vertex neighbor grouping",
      "description": "Define neighbors loosely so that voxels can be grouped into the same ROI if they share at least one vertex."
    },
    "nifti": {
      "type": "boolean",
      "default": false,
      "title": "Output NIFTI files",
      "description": "Switch to output *.nii.gz GM and GMI files"
    },
    "preinfl_inset": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Pre-inflation inset",
      "description": "Start with a WM ROI, inflate it to find the nearest GM, then expand that GM and subtract away the WM+CSF parts."
    },
    "preinfl_inflate": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Pre-inflation size",
      "description": "Number of voxels for initial inflation of PSET."
    },
    "dump_no_labtab": {
      "type": "boolean",
      "default": false,
      "title": "Disable labeltable",
      "description": "Switch for turning off labeltable attachment to the output GM and GMI files."
    }
  },
  "additionalProperties": false,
  "required": [
    "inset",
    "thresh",
    "prefix"
  ]
}