{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Creates slice-based regressors for regressing out components of heart rate, respiration, and respiration volume per time using independent data files or BIDS formatted files.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "afni.RetroTS.py"
    },
    "resp_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Respiration File",
      "description": "Respiration data file"
    },
    "card_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Cardiac File",
      "description": "Cardiac data file"
    },
    "phys_fs": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Physiological Sampling Frequency",
      "description": "Physiological signal sampling frequency in Hz"
    },
    "num_slices": {
      "type": "number",
      "title": "Number of Slices",
      "description": "Number of slices"
    },
    "volume_tr": {
      "type": "number",
      "title": "Volume TR",
      "description": "Volume TR in seconds"
    },
    "phys_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "BIDS Physio File",
      "description": "BIDS formatted physio file in tab-separated format, can be gzipped"
    },
    "phys_json": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "BIDS Physio JSON",
      "description": "BIDS formatted physio metadata json file. If not specified, the json corresponding to the phys_file will be loaded."
    },
    "prefix": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output File Prefix",
      "description": "Prefix of output file"
    },
    "rvt_shifts": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "RVT Shifts",
      "description": "Vector of shifts in seconds of RVT signal. (default is [0:5:20])"
    },
    "rvt_out": {
      "type": "boolean",
      "default": false,
      "title": "Write RVT Regressors Flag",
      "description": "Flag for writing RVT regressors (default is 1)"
    },
    "resp_cutoff_freq": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Respiratory Cut-off Frequency",
      "description": "Cut-off frequency in Hz for respiratory lowpass filter (default 3 Hz)"
    },
    "cardiac_cutoff_freq": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Cardiac Cut-off Frequency",
      "description": "Cut-off frequency in Hz for cardiac lowpass filter (default 3 Hz)"
    },
    "cardiac_out": {
      "type": "boolean",
      "default": false,
      "title": "Write Cardiac Regressors Flag",
      "description": "Flag for writing Cardiac regressors (default is 1)"
    },
    "respiration_out": {
      "type": "boolean",
      "default": false,
      "title": "Write Respiratory Regressors Flag",
      "description": "Flag for writing Respiratory regressors (default is 1)"
    },
    "interp_style": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Interpolation Style",
      "description": "Resampling kernel (default is 'linear')"
    },
    "fir_order": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FIR Filter Order",
      "description": "Order of FIR filter (default is 40)"
    },
    "quiet": {
      "type": "boolean",
      "default": false,
      "title": "Quiet Mode",
      "description": "Show talkative progress as the program runs (default is 1)"
    },
    "demo": {
      "type": "boolean",
      "default": false,
      "title": "Demo Mode",
      "description": "Run demonstration of RetroTS (default is 0)"
    },
    "show_graphs": {
      "type": "boolean",
      "default": false,
      "title": "Show Graphs",
      "description": "Show graphs (default is unset; set with any parameter to view)"
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "title": "Debug Flag",
      "description": "Drop into pdb upon an exception (default is False)"
    },
    "slice_offset": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Slice Offset",
      "description": "Vector of slice acquisition time offsets in seconds (default is equivalent of alt+z)"
    },
    "slice_major": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Slice Major",
      "description": "Unknown parameter (default is 1)"
    },
    "slice_order": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Slice Order",
      "description": "Slice timing information in seconds. (default is alt+z)"
    },
    "zero_phase_offset": {
      "type": "boolean",
      "default": false,
      "title": "Zero Phase Offset",
      "description": "Zero phase offset flag"
    },
    "legacy_transform": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Legacy Transform",
      "description": "Specify the version of the original Matlab code's transformation (default is 0)"
    }
  },
  "additionalProperties": false,
  "required": [
    "num_slices",
    "volume_tr"
  ]
}