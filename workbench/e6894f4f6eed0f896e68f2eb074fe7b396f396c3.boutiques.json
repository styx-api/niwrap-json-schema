{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Dilate a cifti file.\n\nFor all data values designated as bad, if they neighbor a good value or are within the specified distance of a good value in the same kind of model, replace the value with a distance weighted average of nearby good values, otherwise set the value to zero.  If -nearest is specified, it will use the value from the closest good value within range instead of a weighted average.  When the input file contains label data, nearest dilation is used on the surface, and weighted popularity is used in the volume.\n\nThe -*-corrected-areas options are intended for dilating on group average surfaces, but it is only an approximate correction for the reduction of structure in a group average surface.\n\nIf -bad-brainordinate-roi is specified, all values, including those with value zero, are good, except for locations with a positive value in the ROI.  If it is not specified, only values equal to zero are bad.",
  "type": "object",
  "properties": {
    "__STYXTYPE__": {
      "const": "cifti-dilate"
    },
    "cifti_in": {
      "type": "string",
      "title": "cifti_in",
      "description": "the input cifti file"
    },
    "direction": {
      "type": "string",
      "title": "direction",
      "description": "which dimension to dilate along, ROW or COLUMN"
    },
    "surface_distance": {
      "type": "number",
      "title": "surface_distance",
      "description": "the distance to dilate on surfaces, in mm"
    },
    "volume_distance": {
      "type": "number",
      "title": "volume_distance",
      "description": "the distance to dilate in the volume, in mm"
    },
    "cifti_out": {
      "type": "string",
      "title": "cifti_out",
      "description": "the output cifti file"
    },
    "left_surface": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "__STYXTYPE__": {
              "const": "left_surface"
            },
            "surface": {
              "type": "string",
              "title": "surface",
              "description": "the left surface file"
            },
            "opt_left_corrected_areas_area_metric": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "opt_left_corrected_areas_area_metric",
              "description": "vertex areas to use instead of computing them from the left surface: the corrected vertex areas, as a metric"
            }
          },
          "additionalProperties": false,
          "description": "specify the left surface to use",
          "required": [
            "surface"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "specify the left surface to use"
    },
    "right_surface": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "__STYXTYPE__": {
              "const": "right_surface"
            },
            "surface": {
              "type": "string",
              "title": "surface",
              "description": "the right surface file"
            },
            "opt_right_corrected_areas_area_metric": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "opt_right_corrected_areas_area_metric",
              "description": "vertex areas to use instead of computing them from the right surface: the corrected vertex areas, as a metric"
            }
          },
          "additionalProperties": false,
          "description": "specify the right surface to use",
          "required": [
            "surface"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "specify the right surface to use"
    },
    "cerebellum_surface": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "__STYXTYPE__": {
              "const": "cerebellum_surface"
            },
            "surface": {
              "type": "string",
              "title": "surface",
              "description": "the cerebellum surface file"
            },
            "opt_cerebellum_corrected_areas_area_metric": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "opt_cerebellum_corrected_areas_area_metric",
              "description": "vertex areas to use instead of computing them from the cerebellum surface: the corrected vertex areas, as a metric"
            }
          },
          "additionalProperties": false,
          "description": "specify the cerebellum surface to use",
          "required": [
            "surface"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "specify the cerebellum surface to use"
    },
    "opt_bad_brainordinate_roi_roi_cifti": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "opt_bad_brainordinate_roi_roi_cifti",
      "description": "specify an roi of brainordinates to overwrite, rather than zeros: cifti dscalar or dtseries file, positive values denote brainordinates to have their values replaced"
    },
    "opt_nearest": {
      "type": "boolean",
      "default": false,
      "title": "opt_nearest",
      "description": "use nearest good value instead of a weighted average"
    },
    "opt_merged_volume": {
      "type": "boolean",
      "default": false,
      "title": "opt_merged_volume",
      "description": "treat volume components as if they were a single component"
    },
    "opt_legacy_mode": {
      "type": "boolean",
      "default": false,
      "title": "opt_legacy_mode",
      "description": "use the math from v1.3.2 and earlier for weighted dilation"
    }
  },
  "additionalProperties": false,
  "required": [
    "cifti_in",
    "direction",
    "surface_distance",
    "volume_distance",
    "cifti_out"
  ]
}