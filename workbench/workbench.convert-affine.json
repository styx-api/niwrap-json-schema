{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Convert an affine file between conventions.\n\nNIFTI world matrices can be used directly on mm coordinates via matrix multiplication, they use the NIFTI coordinate system, that is, positive X is right, positive Y is anterior, and positive Z is superior.  Note that wb_command assumes that world matrices transform source coordinates to target coordinates, while other tools may use affines that transform target coordinates to source coordinates.\n\nThe ITK format is used by ANTS.\n\nYou must specify exactly one -from option, but you may specify multiple -to options, and -to-flirt may be specified more than once.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "workbench.convert-affine"
    },
    "from_world": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "from_world"
            },
            "input": {
              "type": "string",
              "title": "input",
              "description": "the input affine"
            },
            "opt_inverse": {
              "type": "boolean",
              "default": false,
              "title": "opt_inverse",
              "description": "for files that use 'target to source' convention"
            }
          },
          "additionalProperties": false,
          "description": "input is a NIFTI 'world' affine",
          "required": [
            "input"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "input is a NIFTI 'world' affine"
    },
    "opt_from_itk_input": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "opt_from_itk_input",
      "description": "input is an ITK matrix: the input affine"
    },
    "from_flirt": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "from_flirt"
            },
            "input": {
              "type": "string",
              "title": "input",
              "description": "the input affine"
            },
            "source_volume": {
              "type": "string",
              "title": "source_volume",
              "description": "the source volume used when generating the input affine"
            },
            "target_volume": {
              "type": "string",
              "title": "target_volume",
              "description": "the target volume used when generating the input affine"
            }
          },
          "additionalProperties": false,
          "description": "input is a flirt matrix",
          "required": [
            "input",
            "source_volume",
            "target_volume"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "input is a flirt matrix"
    },
    "to_world": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "to_world"
            },
            "output": {
              "type": "string",
              "title": "output",
              "description": "output - the output affine"
            },
            "opt_inverse": {
              "type": "boolean",
              "default": false,
              "title": "opt_inverse",
              "description": "write file using 'target to source' convention"
            }
          },
          "additionalProperties": false,
          "description": "write output as a NIFTI 'world' affine",
          "required": [
            "output"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "write output as a NIFTI 'world' affine"
    },
    "opt_to_itk_output": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "opt_to_itk_output",
      "description": "write output as an ITK affine: output - the output affine"
    },
    "to_flirt": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "@type": {
                "const": "to_flirt"
              },
              "output": {
                "type": "string",
                "title": "output",
                "description": "output - the output affine"
              },
              "source_volume": {
                "type": "string",
                "title": "source_volume",
                "description": "the volume you want to apply the transform to"
              },
              "target_volume": {
                "type": "string",
                "title": "target_volume",
                "description": "the target space you want the transformed volume to match"
              }
            },
            "additionalProperties": false,
            "description": "write output as a flirt matrix",
            "required": [
              "output",
              "source_volume",
              "target_volume"
            ]
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "write output as a flirt matrix"
    }
  },
  "additionalProperties": false
}