{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "zip-scene-file",
  "description": "Zip a scene file and its data files.\n\nIf zip-file already exists, it will be overwritten.  If -base-dir is not specified, the base directory will be automatically set to the lowest level directory containing all files.  The scene file must contain only relative paths, and no data files may be outside the base directory.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "workbench/zip-scene-file"
    },
    "scene_file": {
      "type": "string",
      "title": "scene_file",
      "description": "the scene file to make the zip file from"
    },
    "extract_folder": {
      "type": "string",
      "title": "extract_folder",
      "description": "the name of the folder created when the zip file is unzipped"
    },
    "zip_file": {
      "type": "string",
      "title": "zip_file",
      "description": "out - the zip file that will be created"
    },
    "opt_base_dir_directory": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "opt_base_dir_directory",
      "description": "specify a directory that all data files are somewhere within, this will become the root of the zipfile's directory structure: the directory"
    },
    "opt_skip_missing": {
      "type": "boolean",
      "default": false,
      "title": "opt_skip_missing",
      "description": "any missing files will generate only warnings, and the zip file will be created anyway"
    },
    "opt_write_scene_file": {
      "type": "boolean",
      "default": false,
      "title": "opt_write_scene_file",
      "description": "rewrite the scene file before zipping, to store a new base path or fix extra '..'s in paths that might break"
    }
  },
  "additionalProperties": false,
  "required": [
    "scene_file",
    "extract_folder",
    "zip_file"
  ]
}