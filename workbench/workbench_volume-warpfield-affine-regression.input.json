{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "volume-warpfield-affine-regression",
  "description": "Regress affine from warpfield.\n\nFor all voxels in the warpfield, do a regression that predicts the post-warp coordinate from the source coordinate.  When -roi is specified, only consider voxels with a value greater than 0 in <roi-vol>.\n\nThe default is to expect the warpfield to be in relative world coordinates (mm space), and to write the output as a world affine (mm space to mm space).  If you are using FSL-created files and utilities, specify -fnirt and -flirt as needed, as their coordinate conventions are different.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "workbench/volume-warpfield-affine-regression"
    },
    "warpfield": {
      "type": "string",
      "title": "warpfield",
      "description": "the input warpfield"
    },
    "affine_out": {
      "type": "string",
      "title": "affine_out",
      "description": "output - the output affine file"
    },
    "opt_roi_roi_vol": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "opt_roi_roi_vol",
      "description": "only consider voxels within a mask (e.g., a brain mask): the mask volume"
    },
    "opt_fnirt_source_volume": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "opt_fnirt_source_volume",
      "description": "input is a fnirt warpfield: the source volume used when generating the fnirt warpfield"
    },
    "flirt_out": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "flirt_out"
            },
            "source_volume": {
              "type": "string",
              "title": "source_volume",
              "description": "the volume you want to apply the transform to"
            },
            "target_volume": {
              "type": "string",
              "title": "target_volume",
              "description": "the target space you want the transformed volume to match"
            }
          },
          "additionalProperties": false,
          "title": "flirt_out",
          "description": "write output as a flirt matrix rather than a world coordinate transform",
          "required": [
            "source_volume",
            "target_volume"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "flirt_out",
      "description": "write output as a flirt matrix rather than a world coordinate transform"
    }
  },
  "additionalProperties": false,
  "required": [
    "warpfield",
    "affine_out"
  ]
}