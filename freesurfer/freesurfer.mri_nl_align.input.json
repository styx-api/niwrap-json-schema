{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "mri_nl_align",
  "description": "mri_nl_align aligns two images using nonlinear registration.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer/mri_nl_align"
    },
    "source": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Source Image",
      "description": "Input source image file"
    },
    "target": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Target Image",
      "description": "Input target image file"
    },
    "warp": {
      "type": "string",
      "title": "Warp Output",
      "description": "Output warp file"
    },
    "debug_voxel": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Debug Voxel",
      "description": "Debug voxel coordinates (Gx, Gy, Gz)"
    },
    "debug_node": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Debug Node",
      "description": "Debug node coordinates (Gx, Gy, Gz)"
    },
    "no_neg": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "No Negative",
      "description": "Control allowing temporary folds during numerical minimization"
    },
    "renormalize": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Renormalize",
      "description": "Control for renormalizing intensities"
    },
    "aseg_flag": {
      "type": "boolean",
      "default": false,
      "title": "Segmentations Flag",
      "description": "Treat inputs as segmentations"
    },
    "diag_volume": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Diagnostic Volume",
      "description": "Write d2 diagnostics for input volume"
    },
    "optimal_flag": {
      "type": "boolean",
      "default": false,
      "title": "Optimal Search Optimization Flag",
      "description": "Use line search optimization"
    },
    "momentum_flag": {
      "type": "boolean",
      "default": false,
      "title": "Momentum Integration Flag",
      "description": "Use fixed time-step integration"
    },
    "fixed_flag": {
      "type": "boolean",
      "default": false,
      "title": "Fixed Time-Step Integration Flag",
      "description": "Use fixed time-step integration"
    },
    "distance": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Expand Border",
      "description": "Expand border by specified mm every outer cycle"
    },
    "dtrans": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Distance Transform Coefficient",
      "description": "Set distance transform coefficient"
    },
    "match_peak_flag": {
      "type": "boolean",
      "default": false,
      "title": "Match Peak Flag",
      "description": "Match peak of intensity ratio histogram"
    },
    "erode": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Erode",
      "description": "Erode source and target image specified times before morphing"
    },
    "match_mean": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Match Mean",
      "description": "Control for matching peak of intensity ratio histogram"
    },
    "intensity": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Log Likelihood Intensity",
      "description": "Set l_log_likelihood to specified value"
    },
    "ll": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Log Likelihood",
      "description": "Set l_log_likelihood to specified value"
    },
    "noregrid_flag": {
      "type": "boolean",
      "default": false,
      "title": "Disable Regridding Flag",
      "description": "Disable regridding"
    },
    "regrid_flag": {
      "type": "boolean",
      "default": false,
      "title": "Enable Regridding Flag",
      "description": "Enable regridding"
    },
    "view": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "View Voxel",
      "description": "View voxel coordinates (Gx, Gy, Gz)"
    },
    "levels": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Levels",
      "description": "Set levels to specified value"
    },
    "area_smoothness": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Area Smoothness",
      "description": "Set l_area_smoothness to specified value"
    },
    "asmooth": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Area Smoothness (asmooth)",
      "description": "Set l_area_smoothness to specified value"
    },
    "area": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Area",
      "description": "Set l_area to specified value"
    },
    "tolerance": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Tolerance",
      "description": "Set tolerance to specified value"
    },
    "sigma": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Sigma",
      "description": "Set sigma to specified value"
    },
    "min_sigma": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Minimum Sigma",
      "description": "Set minimum sigma value"
    },
    "ribbon": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Ribbon",
      "description": "Read ribbon from specified file and insert into aseg"
    },
    "rthresh": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Compression Ratio Threshold",
      "description": "Set compression ratio threshold to specified value"
    },
    "scale": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Scale",
      "description": "Scale input values by specified factor"
    },
    "dt": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Delta Time",
      "description": "Set dt to specified value"
    },
    "passes": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Passes",
      "description": "Integrate in specified number of passes"
    },
    "skip": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Skip Voxels",
      "description": "Skip specified number of voxels in source data"
    },
    "apply": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Apply Transform",
      "description": "Control for applying transform after registration"
    },
    "distance_log": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Distance Log",
      "description": "Set l_distance to specified value"
    },
    "momentum": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Momentum",
      "description": "Set momentum to specified value"
    },
    "iterations": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Number of Iterations",
      "description": "Set number of iterations to specified value"
    },
    "smoothness": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Smoothness",
      "description": "Set l_smoothness to specified value"
    },
    "transform": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Forward Transform",
      "description": "Read the forward transform from specified file"
    },
    "inverse_transform": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Inverse Transform",
      "description": "Read the inverse transform from specified file"
    },
    "binary": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Binary",
      "description": "Set l_binary to specified value"
    },
    "jacobian": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Jacobian",
      "description": "Set l_jacobian to specified value"
    },
    "disable_zero_locations": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Disable Zero Image Locations",
      "description": "Control for disabling zero image locations"
    },
    "smooth_averages": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Gradient Smoothing Averages",
      "description": "Smooth gradient with specified number of averages"
    },
    "exp_k": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Exp K",
      "description": "Set exp_k to specified value"
    },
    "diagnostics": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Diagnostics Iteration",
      "description": "Write diagnostics at each specified iteration"
    }
  },
  "additionalProperties": false,
  "required": [
    "source",
    "target",
    "warp",
    "@type"
  ]
}