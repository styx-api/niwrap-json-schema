{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "dcmdjpeg.fs",
  "description": "A tool to decode JPEG-compressed DICOM files.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.dcmdjpeg.fs"
    },
    "input_file": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Input File",
      "description": "DICOM input filename to be converted"
    },
    "output_file": {
      "type": "string",
      "title": "Output File",
      "description": "DICOM output filename"
    },
    "help": {
      "type": "boolean",
      "default": false,
      "title": "Help Flag",
      "description": "Print this help text and exit"
    },
    "version": {
      "type": "boolean",
      "default": false,
      "title": "Version Flag",
      "description": "Print version information and exit"
    },
    "arguments": {
      "type": "boolean",
      "default": false,
      "title": "Arguments Flag",
      "description": "Print expanded command line arguments"
    },
    "quiet": {
      "type": "boolean",
      "default": false,
      "title": "Quiet Flag",
      "description": "Quiet mode, print no warnings and errors"
    },
    "verbose": {
      "type": "boolean",
      "default": false,
      "title": "Verbose Flag",
      "description": "Verbose mode, print processing details"
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "title": "Debug Flag",
      "description": "Debug mode, print debug information"
    },
    "log_level": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Log Level",
      "description": "Use level l for the logger (fatal, error, warn, info, debug, trace)"
    },
    "log_config": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Log Config",
      "description": "Use config file f for the logger"
    },
    "read_file": {
      "type": "boolean",
      "default": false,
      "title": "Read File Flag",
      "description": "Read file format or data set (default)"
    },
    "read_file_only": {
      "type": "boolean",
      "default": false,
      "title": "Read File Only Flag",
      "description": "Read file format only"
    },
    "read_dataset": {
      "type": "boolean",
      "default": false,
      "title": "Read Dataset Flag",
      "description": "Read data set without file meta information"
    },
    "conv_photometric": {
      "type": "boolean",
      "default": false,
      "title": "Conv Photometric Flag",
      "description": "Convert if YCbCr photometric interpretation (default)"
    },
    "conv_lossy": {
      "type": "boolean",
      "default": false,
      "title": "Conv Lossy Flag",
      "description": "Convert YCbCr to RGB if lossy JPEG"
    },
    "conv_guess": {
      "type": "boolean",
      "default": false,
      "title": "Conv Guess Flag",
      "description": "Convert to RGB if YCbCr is guessed by library"
    },
    "conv_guess_lossy": {
      "type": "boolean",
      "default": false,
      "title": "Conv Guess Lossy Flag",
      "description": "Convert to RGB if lossy JPEG and YCbCr is guessed"
    },
    "conv_always": {
      "type": "boolean",
      "default": false,
      "title": "Conv Always Flag",
      "description": "Always convert YCbCr to RGB"
    },
    "conv_never": {
      "type": "boolean",
      "default": false,
      "title": "Conv Never Flag",
      "description": "Never convert color space"
    },
    "planar_auto": {
      "type": "boolean",
      "default": false,
      "title": "Planar Auto Flag",
      "description": "Automatically determine planar configuration from SOP class and color space (default)"
    },
    "color_by_pixel": {
      "type": "boolean",
      "default": false,
      "title": "Color by Pixel Flag",
      "description": "Always store color-by-pixel"
    },
    "color_by_plane": {
      "type": "boolean",
      "default": false,
      "title": "Color by Plane Flag",
      "description": "Always store color-by-plane"
    },
    "uid_default": {
      "type": "boolean",
      "default": false,
      "title": "UID Default Flag",
      "description": "Keep same SOP Instance UID (default)"
    },
    "uid_always": {
      "type": "boolean",
      "default": false,
      "title": "UID Always Flag",
      "description": "Always assign new UID"
    },
    "workaround_pred6": {
      "type": "boolean",
      "default": false,
      "title": "Workaround Pred6 Flag",
      "description": "Enable workaround for JPEG lossless images with overflow in predictor 6"
    },
    "workaround_incpl": {
      "type": "boolean",
      "default": false,
      "title": "Workaround Incomplete JPEG Data Flag",
      "description": "Enable workaround for incomplete JPEG data"
    },
    "write_file": {
      "type": "boolean",
      "default": false,
      "title": "Write File Flag",
      "description": "Write file format (default)"
    },
    "write_dataset": {
      "type": "boolean",
      "default": false,
      "title": "Write Dataset Flag",
      "description": "Write data set without file meta information"
    },
    "write_xfer_little": {
      "type": "boolean",
      "default": false,
      "title": "Write Xfer Little Flag",
      "description": "Write with explicit VR little endian (default)"
    },
    "write_xfer_big": {
      "type": "boolean",
      "default": false,
      "title": "Write Xfer Big Flag",
      "description": "Write with explicit VR big endian TS"
    },
    "write_xfer_implicit": {
      "type": "boolean",
      "default": false,
      "title": "Write Xfer Implicit Flag",
      "description": "Write with implicit VR little endian TS"
    },
    "enable_new_vr": {
      "type": "boolean",
      "default": false,
      "title": "Enable New VR Flag",
      "description": "Enable support for new VRs (UN/UT) (default)"
    },
    "disable_new_vr": {
      "type": "boolean",
      "default": false,
      "title": "Disable New VR Flag",
      "description": "Disable support for new VRs, convert to OB"
    },
    "group_length_recalc": {
      "type": "boolean",
      "default": false,
      "title": "Group Length Recalc Flag",
      "description": "Recalculate group lengths if present (default)"
    },
    "group_length_create": {
      "type": "boolean",
      "default": false,
      "title": "Group Length Create Flag",
      "description": "Always write with group length elements"
    },
    "group_length_remove": {
      "type": "boolean",
      "default": false,
      "title": "Group Length Remove Flag",
      "description": "Always write without group length elements"
    },
    "length_explicit": {
      "type": "boolean",
      "default": false,
      "title": "Length Explicit Flag",
      "description": "Write with explicit lengths (default)"
    },
    "length_undefined": {
      "type": "boolean",
      "default": false,
      "title": "Length Undefined Flag",
      "description": "Write with undefined lengths"
    },
    "padding_retain": {
      "type": "boolean",
      "default": false,
      "title": "Padding Retain Flag",
      "description": "Do not change padding (default if not --write-dataset)"
    },
    "padding_off": {
      "type": "boolean",
      "default": false,
      "title": "Padding Off Flag",
      "description": "No padding (implicit if --write-dataset)"
    },
    "padding_create": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Padding Create",
      "description": "Align file on multiple of f bytes and items on multiple of i bytes"
    }
  },
  "additionalProperties": false,
  "required": [
    "input_file",
    "output_file"
  ]
}