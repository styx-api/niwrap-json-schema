{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Calculates measures and stats derived from brain segmentation data.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.mri_segstats"
    },
    "segvol": {
      "type": "string",
      "title": "Segmentation volume",
      "description": "Input segmentation volume. This volume's voxel values indicate a segmentation or class."
    },
    "annot_subject": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Annotation subject",
      "description": "Create a segmentation from hemi.parc.annot. Subject is the name of the subject."
    },
    "annot_hemisphere": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Annotation hemisphere"
    },
    "annot_parcellation": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Annotation parcellation"
    },
    "slabel_subject": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Surface label subject",
      "description": "Create a segmentation from the given surface label. The points in the label are given a value of 1; 0 for outside."
    },
    "slabel_hemisphere": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Surface label hemisphere"
    },
    "slabel_label": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Surface label file"
    },
    "output_file": {
      "type": "string",
      "title": "Output file",
      "description": "ASCII file in which summary statistics are saved."
    },
    "partial_vol_comp": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Partial volume compensation volume",
      "description": "Use pvvol to compensate for partial voluming, resulting in more accurate volumes."
    },
    "input_volume": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Input volume",
      "description": "Input volume from which to compute more statistics."
    },
    "seg_erode": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Erode segmentation",
      "description": "Erode segmentation boundaries by Nerodes."
    },
    "frame": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Frame number",
      "description": "Report statistics of the input volume at the specified 0-based frame number."
    },
    "robust": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Robust percentage",
      "description": "Compute stats after excluding a percentage of high and low values."
    },
    "square_input": {
      "type": "boolean",
      "default": false,
      "title": "Square input",
      "description": "Compute the square of the input before computing stats."
    },
    "sqrt_input": {
      "type": "boolean",
      "default": false,
      "title": "Square root input",
      "description": "Compute the square root of the input before computing stats."
    },
    "multiply_input": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Multiply input",
      "description": "Multiply input by value."
    },
    "divide_input": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Divide input",
      "description": "Divide input by value."
    },
    "snr_column": {
      "type": "boolean",
      "default": false,
      "title": "Save SNR column",
      "description": "Save mean/std as extra column in output table."
    },
    "absolute_value": {
      "type": "boolean",
      "default": false,
      "title": "Absolute value",
      "description": "Compute absolute value of input before spatial average."
    },
    "accumulate_mean": {
      "type": "boolean",
      "default": false,
      "title": "Accumulate mean",
      "description": "Save mean*nvoxels instead of mean."
    },
    "color_table": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Color table file",
      "description": "FreeSurfer color table file to specify how each segmentation index is mapped to a segmentation name and color."
    },
    "default_color_table": {
      "type": "boolean",
      "default": false,
      "title": "Use default color table",
      "description": "Use default color table from FreeSurferColorLUT.txt."
    },
    "gca_color_table": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "GCA color table file",
      "description": "Get color table from the given GCA file."
    },
    "ids": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Segmentation IDs",
      "description": "Specify numeric segmentation ids."
    },
    "exclude_ids": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Exclude IDs",
      "description": "Exclude the given segmentation id(s) from report."
    },
    "exclude_gm_wm": {
      "type": "boolean",
      "default": false,
      "title": "Exclude cortical GM and WM",
      "description": "Exclude cortical gray and white matter based on predefined IDs."
    },
    "surf_wm_vol": {
      "type": "boolean",
      "default": false,
      "title": "Surface-based WM volume",
      "description": "Compute cortical matter volume based on the white surface volume."
    },
    "surf_ctx_vol": {
      "type": "boolean",
      "default": false,
      "title": "Surface-based cortex volume",
      "description": "Compute cortical volumes from surface."
    },
    "no_global_stats": {
      "type": "boolean",
      "default": false,
      "title": "No global stats",
      "description": "Turns off computation of global stats."
    },
    "empty_segments": {
      "type": "boolean",
      "default": false,
      "title": "Report empty segmentations",
      "description": "Report on segmentations listed in the color table even if they are not found in the segmentation volume."
    },
    "ctab_output": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output color table",
      "description": "Create an output color table with just the segmentations reported."
    },
    "mask_volume": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask volume",
      "description": "Exclude voxels that are not in the mask. Voxels to be excluded are assigned a segid of 0."
    },
    "mask_threshold": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask threshold",
      "description": "Exclude voxels that are below thresh, above -thresh, or between -thresh and +thresh."
    },
    "mask_sign": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask sign",
      "description": "Specify sign for masking threshold. Choices are abs, pos, and neg."
    },
    "mask_frame": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask frame",
      "description": "Derive the mask volume from the specified 0-based frame."
    },
    "invert_mask": {
      "type": "boolean",
      "default": false,
      "title": "Invert mask",
      "description": "After applying all the masking criteria, invert the mask."
    },
    "mask_erode": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Erode mask",
      "description": "Erode mask by specified number of iterations."
    },
    "brain_vol_seg": {
      "type": "boolean",
      "default": false,
      "title": "Brain volume from segmentation",
      "description": "Get volume of brain as the sum of the volumes of the segmentations that are in the brain."
    },
    "brain_mask_vol": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Brain mask volume",
      "description": "Load brain mask and compute brain volume from non-zero voxels."
    },
    "subcortical_gray": {
      "type": "boolean",
      "default": false,
      "title": "Subcortical gray matter volume",
      "description": "Compute volume of subcortical gray matter."
    },
    "total_gray": {
      "type": "boolean",
      "default": false,
      "title": "Total gray matter volume",
      "description": "Compute volume of total gray matter."
    },
    "intracranial_volume": {
      "type": "boolean",
      "default": false,
      "title": "Intracranial volume",
      "description": "Compute intracranial volume from talairach.xfm."
    },
    "intracranial_volume_only": {
      "type": "boolean",
      "default": false,
      "title": "Intracranial volume only",
      "description": "Compute intracranial volume from talairach.xfm and exit."
    },
    "old_intracranial_volume_only": {
      "type": "boolean",
      "default": false,
      "title": "Old intracranial volume only",
      "description": "Compute intracranial volume from talairach_with_skull.lta and exit."
    },
    "talairach_transform": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Talairach transform file",
      "description": "Specify path to talairach.xfm file for eTIV."
    },
    "xfm_to_etiv": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Transform to eTIV",
      "description": "Convert xfm to eTIV and write to output file."
    },
    "euler_hole_count": {
      "type": "boolean",
      "default": false,
      "title": "Euler hole count",
      "description": "Write out number of defect holes based on the Euler number."
    },
    "avg_waveform": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Average waveform file",
      "description": "Compute the average waveform and save to text file."
    },
    "sum_waveform": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Sum waveform file",
      "description": "Compute the sum waveform and save to text file."
    },
    "avg_waveform_vol": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Average waveform volume file",
      "description": "Compute average waveform and save to MRI volume."
    },
    "remove_avgwf_mean": {
      "type": "boolean",
      "default": false,
      "title": "Remove avgwf temporal mean",
      "description": "Remove temporal mean from avgwf and avgwfvol."
    },
    "spatial_frame_avg": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Spatial frame average file",
      "description": "Save mean across space and frame."
    },
    "voxel_crs": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Voxel CRS",
      "description": "Replace segmentation with all 0s except at specified voxel."
    },
    "replace_ids": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Replace segmentation IDs",
      "description": "Replace segmentation ID1 with ID2."
    },
    "replace_ids_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Replace IDs file",
      "description": "Replace segmentations based on pairs in file."
    },
    "gtm_default_seg_merge": {
      "type": "boolean",
      "default": false,
      "title": "GTM default segmentation merge",
      "description": "Replace segmentations based on GTM default."
    },
    "gtm_default_seg_merge_choroid": {
      "type": "boolean",
      "default": false,
      "title": "GTM default segmentation merge choroid",
      "description": "Replace segmentations based on GTM default excluding choroid."
    },
    "qa_stats_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "QA statistics file",
      "description": "Compute stats useful for quality control."
    },
    "subjects_dir": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Subjects directory",
      "description": "Set SUBJECTS_DIR environment variable."
    },
    "random_seed": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Random seed",
      "description": "Set random number generator seed value."
    }
  },
  "additionalProperties": false,
  "required": [
    "segvol",
    "output_file"
  ]
}