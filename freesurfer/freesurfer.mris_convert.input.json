{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "mris_convert",
  "description": "This program will convert MRI-surface data formats.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.mris_convert"
    },
    "input_file": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Input file",
      "description": "Input filename"
    },
    "second_input_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Second input file",
      "description": "Second input filename to be combined, required for --combinesurfs"
    },
    "output_file": {
      "type": "string",
      "title": "Output file",
      "description": "Output filename"
    },
    "patch": {
      "type": "boolean",
      "default": false,
      "title": "Patch flag",
      "description": "Input file is a patch file, not a full surface"
    },
    "curv_overlay_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Curv overlay files",
      "description": "Input scalar curv overlay files"
    },
    "functional_data_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Functional data file",
      "description": "Input functional time-series or other multi-frame data"
    },
    "orig_positions": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Orig positions",
      "description": "Read orig positions"
    },
    "scale": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Scale",
      "description": "Scale vertex xyz by scale"
    },
    "rescale": {
      "type": "boolean",
      "default": false,
      "title": "Rescale flag",
      "description": "Rescale vertex xyz so total area is same as group average"
    },
    "talairach_xfm": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Talairach xfm",
      "description": "Apply talairach xfm of subject to vertex xyz"
    },
    "normals": {
      "type": "boolean",
      "default": false,
      "title": "Normals flag",
      "description": "Output ascii file where vertex data is the surface normal vector"
    },
    "neighbors": {
      "type": "boolean",
      "default": false,
      "title": "Neighbors flag",
      "description": "Write out neighbors of a vertex in each row"
    },
    "xyz": {
      "type": "boolean",
      "default": false,
      "title": "XYZ flag",
      "description": "Print only surface xyz to ascii file"
    },
    "annotation_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Annotation file",
      "description": "Input annotation or gifti label data"
    },
    "parcstats_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Parcstats file",
      "description": "Input text file containing label/val pairs for parcellation"
    },
    "gifti_dataarray_num": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Gifti dataarray number",
      "description": "Input gifti dataarray number to use"
    },
    "label_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Label file",
      "description": "Input .label file and name for this label"
    },
    "label_stats_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Label stats file",
      "description": "Output gifti file to which label stats will be written"
    },
    "combine_surfs": {
      "type": "boolean",
      "default": false,
      "title": "Combine surfaces flag",
      "description": "Combine surface files, two input surface files required"
    },
    "merge_gifti": {
      "type": "boolean",
      "default": false,
      "title": "Merge gifti flag",
      "description": "Generate combined gifti file with surface and multiple curvature data"
    },
    "split_gifti": {
      "type": "boolean",
      "default": false,
      "title": "Split gifti flag",
      "description": "Separate surface and data array from combined gifti file"
    },
    "gifti_outdir": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Gifti output directory",
      "description": "Output directory for generated gifti files"
    },
    "delete_cmds": {
      "type": "boolean",
      "default": false,
      "title": "Delete cmds flag",
      "description": "Delete command lines in surface"
    },
    "center": {
      "type": "boolean",
      "default": false,
      "title": "Center flag",
      "description": "Put center of surface at (0,0,0)"
    },
    "vol_geom": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Volume geometry",
      "description": "Use MRIVol to set the volume geometry"
    },
    "remove_vol_geom": {
      "type": "boolean",
      "default": false,
      "title": "Remove volume geometry flag",
      "description": "Set the valid flag in vg to 0"
    },
    "to_surf": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "To surface coordinates",
      "description": "Copy coordinates from surfcoords to output (good for patches)"
    },
    "to_scanner": {
      "type": "boolean",
      "default": false,
      "title": "To scanner flag",
      "description": "Convert coordinates from native FS (tkr) coords to scanner coords"
    },
    "to_tkr": {
      "type": "boolean",
      "default": false,
      "title": "To TKR flag",
      "description": "Convert coordinates from scanner coords to native FS (tkr) coords"
    },
    "userealras": {
      "type": "boolean",
      "default": false,
      "title": "Use real RAS flag",
      "description": "Same as --to-scanner"
    },
    "usesurfras": {
      "type": "boolean",
      "default": false,
      "title": "Use surf RAS flag",
      "description": "Same as --to-tkr"
    },
    "upsample": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Upsample times",
      "description": "Upsample N times by splitting edges/faces"
    },
    "volume": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Volume surface",
      "description": "Compute vertex-wise volume"
    },
    "area": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Area surface",
      "description": "Compute vertex-wise area"
    },
    "angle": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Angle surface",
      "description": "Compute cortical orientation angles"
    },
    "label_to_mask": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Label to mask surface",
      "description": "Convert a surface-based label to a binary mask"
    },
    "cras_add": {
      "type": "boolean",
      "default": false,
      "title": "CRAS Add flag",
      "description": "Shift center to scanner coordinate center"
    },
    "cras_subtract": {
      "type": "boolean",
      "default": false,
      "title": "CRAS Subtract flag",
      "description": "Shift center from scanner coordinate center"
    }
  },
  "additionalProperties": false,
  "required": [
    "input_file",
    "output_file"
  ]
}