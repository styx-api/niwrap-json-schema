{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "mri_fwhm",
  "description": "FreeSurfer program to estimate the global Gaussian smoothness of a multi-frame, volume-based data set.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.mri_fwhm"
    },
    "inputvol": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Input Volume",
      "description": "Input volume file. Format must be something readable by mri_convert (e.g., mgh, mgz, img, nii, nii.gz)."
    },
    "outputvol": {
      "type": "string",
      "title": "Output Volume",
      "description": "Output volume file: save input after smoothing."
    },
    "save_detrended": {
      "type": "boolean",
      "default": false,
      "title": "Save Detrended Flag",
      "description": "Save input after smoothing and detrending."
    },
    "save_unmasked": {
      "type": "boolean",
      "default": false,
      "title": "Save Unmasked Flag",
      "description": "Do not mask output volume."
    },
    "smooth_only": {
      "type": "boolean",
      "default": false,
      "title": "Smooth Only Flag",
      "description": "Smooth and save, do not compute fwhm."
    },
    "mask": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Binary Mask",
      "description": "Binary mask file."
    },
    "mask_thresh": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask Threshold",
      "description": "Threshold for mask (default is 0.5)."
    },
    "auto_mask": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Auto Mask",
      "description": "Auto compute mask based on global mean threshold."
    },
    "nerode": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Erode Mask Times",
      "description": "Erode mask n times prior to FWHM computation."
    },
    "mask_inv": {
      "type": "boolean",
      "default": false,
      "title": "Mask Inversion Flag",
      "description": "Invert mask."
    },
    "out_mask": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output Mask",
      "description": "Save final mask to outmaskvol."
    },
    "detrend_matrix": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Detrend Matrix",
      "description": "Detrending matrix file in MATLAB4 format."
    },
    "detrend_order": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Detrend Order",
      "description": "Polynomial detrending order (default 0)."
    },
    "square_input": {
      "type": "boolean",
      "default": false,
      "title": "Square Input Flag",
      "description": "Compute square of input before smoothing."
    },
    "smooth_by_fwhm": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Smooth by FWHM",
      "description": "Smooth BY fwhm before measuring."
    },
    "smooth_by_gstd": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Smooth by gstd",
      "description": "Smooth using gstd (equivalent to --fwhm)."
    },
    "median_filter": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Median Filter Width",
      "description": "Perform median filtering instead of Gaussian."
    },
    "smooth_to_fwhm": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Smooth to FWHM",
      "description": "Smooth TO this FWHM."
    },
    "to_fwhm_tol": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "To FWHM Tolerance",
      "description": "Tolerance for smoothing to FWHM (default 0.5mm)."
    },
    "to_fwhm_nmax": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "To FWHM Max Iterations",
      "description": "Maximum iterations for smoothing to FWHM (default 20)."
    },
    "to_fwhm_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "To FWHM File",
      "description": "Save smoothing to FWHM parameters to file."
    },
    "summary_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Summary File",
      "description": "Summary/log file."
    },
    "dat_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "DAT File",
      "description": "Prints only the final FWHM estimate into this file."
    },
    "fwhm_dat_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FWHM DAT File",
      "description": "Compute and save the FWHM of each dimension."
    },
    "fwhm_vol_mean_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FWHM Volume Mean File",
      "description": "Compute and save the FWHM of each dimension based on fwhmvol."
    },
    "fwhm_vol": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FWHM Volume",
      "description": "Save FWHM volume."
    },
    "synth": {
      "type": "boolean",
      "default": false,
      "title": "Synthesize Input Flag",
      "description": "Synthesize input with white Gaussian noise."
    },
    "synth_frames": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Synthesize Frames",
      "description": "Number of frames for synthesized input (default is 10)."
    },
    "nframes_min": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Minimum Frames",
      "description": "Require at least this many frames."
    },
    "ispm": {
      "type": "boolean",
      "default": false,
      "title": "SPM Analyze Input Flag",
      "description": "Input is SPM-analyze."
    },
    "nspm_zero_padding": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "SPM Zero Padding",
      "description": "Zero-padding for SPM-analyze."
    },
    "threads": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Number of Threads",
      "description": "Set OPEN MP threads."
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "title": "Debug Flag",
      "description": "Turn on debugging."
    },
    "checkopts": {
      "type": "boolean",
      "default": false,
      "title": "Check Options Flag",
      "description": "Check options and exit without running."
    },
    "version": {
      "type": "boolean",
      "default": false,
      "title": "Version Flag",
      "description": "Print version and exit."
    }
  },
  "additionalProperties": false,
  "required": [
    "inputvol",
    "outputvol"
  ]
}