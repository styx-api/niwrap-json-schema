{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "MRI automatic tissue labeling using a Gaussian Classifier Atlas (GCA).",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.mri_rf_label"
    },
    "input_volumes": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "Input volumes",
      "description": "Input volume(s)"
    },
    "transform_file": {
      "type": "string",
      "title": "Transform file",
      "description": "Transform file"
    },
    "gcafile": {
      "type": "string",
      "title": "GCA file",
      "description": "GCA file"
    },
    "output_volume": {
      "type": "string",
      "title": "Output volume",
      "description": "Output volume"
    },
    "cross_sequence_flag": {
      "type": "boolean",
      "default": false,
      "title": "Cross sequence flag",
      "description": "Label a volume acquired with a sequence different than atlas"
    },
    "nogibbs_flag": {
      "type": "boolean",
      "default": false,
      "title": "No gibbs flag",
      "description": "Disable gibbs priors"
    },
    "wm_path": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "WM segmentation path",
      "description": "Use WM segmentation from provided file"
    },
    "conform_flag": {
      "type": "boolean",
      "default": false,
      "title": "Conform flag",
      "description": "Interpolate volume to be isotropic 1mm^3"
    },
    "normpd_flag": {
      "type": "boolean",
      "default": false,
      "title": "Normalize PD flag",
      "description": "Normalize PD image to GCA means"
    },
    "gca_tl": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "GCA thin temporal lobe",
      "description": "Use file to label the thin temporal lobe"
    },
    "debug_voxel": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Debug voxel",
      "description": "Debug voxel at specified coordinates"
    },
    "debug_node": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Debug node",
      "description": "Debug node at specified coordinates"
    },
    "debug_label": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Debug label",
      "description": "Debug label at specified index"
    },
    "tr": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "TR",
      "description": "Set TR in msec"
    },
    "te": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "TE",
      "description": "Set TE in msec"
    },
    "alpha": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Alpha",
      "description": "Set alpha in radians"
    },
    "example": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Example T1 and segmentation",
      "description": "Use T1 (mri_vol) and segmentation as example"
    },
    "pthresh": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": 0.7,
      "title": "P threshold",
      "description": "Use p threshold for adaptive renormalization"
    },
    "niter": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": 2,
      "title": "Number of iterations",
      "description": "Apply max likelihood for n iterations"
    },
    "novar_flag": {
      "type": "boolean",
      "default": false,
      "title": "No variance flag",
      "description": "Do not use variance in classification"
    },
    "regularize": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Regularize variance",
      "description": "Regularize variance to be sigma+nC(noise)"
    },
    "nohippo_flag": {
      "type": "boolean",
      "default": false,
      "title": "No hippocampus edit flag",
      "description": "Do not auto-edit hippocampus"
    },
    "fwm": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Fixed white matter segmentation",
      "description": "Use fixed white matter segmentation from wm"
    },
    "mri_vol": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "MR volume",
      "description": "Write most likely MR volume to specified file"
    },
    "heq": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Histogram equalization",
      "description": "Use histogram equalization from specified volume"
    },
    "renorm": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Renormalize using predicted intensities",
      "description": "Renormalize using predicted intensity values"
    },
    "flash_flag": {
      "type": "boolean",
      "default": false,
      "title": "FLASH model flag",
      "description": "Use FLASH forward model to predict intensity values"
    },
    "flash_params": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FLASH model parameters",
      "description": "Use FLASH forward model and tissue params from file"
    },
    "renormalize": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Renormalize class means",
      "description": "Renorm class means iter times after initial label with window of wsize"
    },
    "set_input": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Set input volume",
      "description": "Set input volume"
    },
    "histogram_flag": {
      "type": "boolean",
      "default": false,
      "title": "Use GCA for histogram normalization",
      "description": "Use GCA to histogram normalize input image"
    },
    "cond_density_mean": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Conditional density mean filter",
      "description": "Mean filter n times to conditional densities"
    },
    "snapshots": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Gibbs process snapshots",
      "description": "Write snapshots of gibbs process every n times to filename"
    },
    "mask": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask volume",
      "description": "Use mri_vol to mask final labeling"
    },
    "expand": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Expand",
      "description": "Expand"
    },
    "max_iter": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": 200,
      "title": "Max iterations",
      "description": "Set max iterations"
    },
    "filter_mode": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Filter with threshold",
      "description": "Filter labeled volume with threshold t mode filter f times"
    },
    "longitudinal_vol": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Longitudinal processing volume",
      "description": "Longitudinal processing: mri_vol is label from tp1, LTA is registration from tp1 to current data"
    },
    "longitudinal_lta": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Longitudinal LTA",
      "description": "Longitudinal LTA registration"
    },
    "relabel_unlikely_flag": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 4,
          "maxItems": 4
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Relabel unlikely flag",
      "description": "Reclassify voxels using a Gaussian window to recomute priors and likelihoods"
    }
  },
  "additionalProperties": false,
  "required": [
    "input_volumes",
    "transform_file",
    "gcafile",
    "output_volume"
  ]
}