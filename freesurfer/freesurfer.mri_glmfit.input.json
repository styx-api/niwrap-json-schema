{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "mri_glmfit",
  "description": "Performs general linear model (GLM) analysis in the volume or the surface.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer/mri_glmfit"
    },
    "glmdir": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "GLM output directory",
      "description": "Directory where output will be saved."
    },
    "y_input": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Input file",
      "description": "Path to input file where each frame is a separate input. Accepts volume or surface-based formats."
    },
    "table_input": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Stats table",
      "description": "Use text table as input instead of --y. Table should be of form produced by asegstats2table or aparcstats2table."
    },
    "fsgd": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FSGD descriptor file",
      "description": "Specify the global design matrix with a FreeSurfer Group Descriptor File (FSGDF)."
    },
    "design_matrix": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Design matrix file",
      "description": "Explicitly specify the design matrix. Can be in simple text or in matlab4 format."
    },
    "contrast_matrix": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "x-styx-type": "file"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Contrast matrix file",
      "description": "Specify one or more contrasts to test. File should be ASCII text with the contrast matrix."
    },
    "osgm_flag": {
      "type": "boolean",
      "default": false,
      "title": "One-sample group mean",
      "description": "Construct X and C as a one-sample group mean."
    },
    "no_contrasts_ok_flag": {
      "type": "boolean",
      "default": false,
      "title": "No contrasts OK flag",
      "description": "Do not fail if no contrasts are specified."
    },
    "dti_params": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "DTI parameters",
      "description": "Do DTI analysis using bvals and bvecs."
    },
    "dti_matrix": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "DTI design matrix",
      "description": "Do DTI analysis using provided matrix."
    },
    "pvr": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "x-styx-type": "file"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Per-voxel regressors",
      "description": "Per-voxel (or vertex) regressors."
    },
    "selfreg": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Self-regressor coordinates",
      "description": "Create a 'self-regressor' from the input data based on the waveform at index col row slice."
    },
    "wls": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Weighted least squares",
      "description": "Perform weighted least squares (WLS) random effects analysis instead of ordinary least squares (OLS) using yffxvar."
    },
    "yffxvar": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "YFFX variance file",
      "description": "For fixed effects analysis."
    },
    "ffxdof": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Fixed effects DOF",
      "description": "Degrees of Freedom (DOF) for fixed effects analysis."
    },
    "ffxdofdat": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Fixed effects DOF data",
      "description": "Text file with DOF for fixed effects analysis."
    },
    "weight": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Weight file",
      "description": "Perform weighted LMS using per-voxel weights from the weightfile."
    },
    "weight_inv_flag": {
      "type": "boolean",
      "default": false,
      "title": "Invert weights flag",
      "description": "Invert weights."
    },
    "weight_sqrt_flag": {
      "type": "boolean",
      "default": false,
      "title": "Square root weights flag",
      "description": "Square root of (inverted) weights."
    },
    "fwhm": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Smoothing kernel FWHM",
      "description": "Smooth input with a Gaussian kernel, specified in mm."
    },
    "var_fwhm": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Variance smoothing FWHM",
      "description": "Smooth residual variance map with a Gaussian kernel, specified in mm."
    },
    "no_mask_smooth_flag": {
      "type": "boolean",
      "default": false,
      "title": "Skip mask during smoothing",
      "description": "Do not mask when smoothing."
    },
    "no_est_fwhm_flag": {
      "type": "boolean",
      "default": false,
      "title": "No FWHM estimation",
      "description": "Turn off FWHM output estimation."
    },
    "mask": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask file",
      "description": "Binary mask file for analysis."
    },
    "label": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Label file",
      "description": "Use label as mask for surface data."
    },
    "no_mask_flag": {
      "type": "boolean",
      "default": false,
      "title": "No mask flag",
      "description": "Do NOT use a mask, same as --no-cortex."
    },
    "no_cortex_flag": {
      "type": "boolean",
      "default": false,
      "title": "No cortex label flag",
      "description": "Do NOT use subjects ?h.cortex.label as --label."
    },
    "mask_inv_flag": {
      "type": "boolean",
      "default": false,
      "title": "Invert mask flag",
      "description": "Invert mask for analysis."
    },
    "prune_flag": {
      "type": "boolean",
      "default": false,
      "title": "Prune zero-value voxels",
      "description": "Remove voxels that do not have a non-zero value at each frame."
    },
    "no_prune_flag": {
      "type": "boolean",
      "default": false,
      "title": "Do not prune voxels",
      "description": "Do not prune zero-value voxels."
    },
    "logy_flag": {
      "type": "boolean",
      "default": false,
      "title": "Log transform y",
      "description": "Compute natural log of y prior to analysis."
    },
    "no_logy_flag": {
      "type": "boolean",
      "default": false,
      "title": "No log transform of y",
      "description": "Do not compute natural log of y prior to analysis."
    },
    "rm_spatial_mean_flag": {
      "type": "boolean",
      "default": false,
      "title": "Remove spatial mean",
      "description": "Subtract the (masked) mean from each frame."
    },
    "yhat_save_flag": {
      "type": "boolean",
      "default": false,
      "title": "Save signal estimate",
      "description": "Save signal estimate (yhat)."
    },
    "eres_save_flag": {
      "type": "boolean",
      "default": false,
      "title": "Save residual error",
      "description": "Save residual error (eres)."
    },
    "eres_scm_flag": {
      "type": "boolean",
      "default": false,
      "title": "Save residual SCM",
      "description": "Save residual error spatial correlation matrix (eres.scm)."
    },
    "save_fwhm_map_flag": {
      "type": "boolean",
      "default": false,
      "title": "Save FWHM map",
      "description": "Save voxel-wise map of FWHM estimates."
    },
    "y_out": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output pre-processed data file",
      "description": "Save input after any pre-processing."
    },
    "surface": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Surface specification",
      "description": "Specify that the input has a surface geometry from the hemisphere of the given FreeSurfer subject. Required for surface data operations."
    },
    "skew_flag": {
      "type": "boolean",
      "default": false,
      "title": "Compute skewness",
      "description": "Compute skew and p-value for skew."
    },
    "kurtosis_flag": {
      "type": "boolean",
      "default": false,
      "title": "Compute kurtosis",
      "description": "Compute kurtosis and p-value for kurtosis."
    },
    "sim_params": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Simulation parameters",
      "description": "Simulate data for statistical testing. Specify nulltype, number of simulations, threshold and csd basename."
    },
    "sim_sign": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Simulation sign",
      "description": "Specify sign for simulation: abs, pos, or neg."
    },
    "uniform_params": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Uniform distribution parameters",
      "description": "Use uniform distribution for mc-full, specify min and max."
    },
    "permute_input_flag": {
      "type": "boolean",
      "default": false,
      "title": "Permute input flag",
      "description": "Permute input for testing purposes (not related to simulation)."
    },
    "pca_flag": {
      "type": "boolean",
      "default": false,
      "title": "Perform PCA",
      "description": "Perform PCA/SVD analysis on the residual."
    },
    "tar1_flag": {
      "type": "boolean",
      "default": false,
      "title": "Compute temporal AR1",
      "description": "Compute and save temporal AR1 of residual."
    },
    "save_yhat_flag": {
      "type": "boolean",
      "default": false,
      "title": "Save signal estimate flag",
      "description": "Flag to save the signal estimate."
    },
    "save_cond_flag": {
      "type": "boolean",
      "default": false,
      "title": "Save condition number",
      "description": "Flag to save design matrix condition at each voxel."
    },
    "voxdump": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Voxel dump coordinates",
      "description": "Save GLM data for a single voxel at the specified col, row, slice."
    },
    "seed": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Random seed",
      "description": "Use seed for random number generation."
    },
    "synth_flag": {
      "type": "boolean",
      "default": false,
      "title": "Synthesize Gaussian noise",
      "description": "Replace input data with Gaussian noise for testing."
    },
    "resynthtest_it": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Resynthesis test iterations",
      "description": "Test GLM by resynthsis with the number of iterations specified."
    },
    "profile_it": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Profile iterations",
      "description": "Test speed with specified number of iterations."
    },
    "mrtm1_params": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "MRTM1 parameters",
      "description": "Perform MRTM1 kinetic modeling with specified reference tissue activity and time in seconds."
    },
    "mrtm2_params": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "MRTM2 parameters",
      "description": "Perform MRTM2 kinetic modeling with specified parameters."
    },
    "logan_params": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Logan model parameters",
      "description": "Perform Logan kinetic modeling with specified parameters."
    },
    "bp_clip_neg_flag": {
      "type": "boolean",
      "default": false,
      "title": "Clip negative BP",
      "description": "Set negative BP voxels to 0."
    },
    "bp_clip_max": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Max value for BP clipping",
      "description": "Set BP voxels above max to max."
    },
    "perm_force_flag": {
      "type": "boolean",
      "default": false,
      "title": "Force permutation test",
      "description": "Force permutation test, even when design matrix is not orthogonal."
    },
    "diag_level": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Diagnostic level",
      "description": "Set diagnostic level."
    },
    "diag_cluster_flag": {
      "type": "boolean",
      "default": false,
      "title": "Cluster diagnostic",
      "description": "Save significant volume and exit from first simulation loop."
    },
    "debug_flag": {
      "type": "boolean",
      "default": false,
      "title": "Debug mode",
      "description": "Turn on debugging mode."
    },
    "checkopts_flag": {
      "type": "boolean",
      "default": false,
      "title": "Check options only",
      "description": "Check options and exit without executing."
    },
    "help_flag": {
      "type": "boolean",
      "default": false,
      "title": "Help",
      "description": "Display help information."
    },
    "version_flag": {
      "type": "boolean",
      "default": false,
      "title": "Version",
      "description": "Print out version and exit."
    },
    "no_fix_vertex_area_flag": {
      "type": "boolean",
      "default": false,
      "title": "No fix vertex area",
      "description": "Turn off fixing of vertex area (backward compatibility)."
    },
    "allowsubjrep_flag": {
      "type": "boolean",
      "default": false,
      "title": "Allow subject repetition",
      "description": "Allow subject names to repeat in the fsgd file."
    },
    "allow_zero_dof_flag": {
      "type": "boolean",
      "default": false,
      "title": "Allow zero DOF",
      "description": "Allow analyses with zero degrees of freedom."
    },
    "illcond_flag": {
      "type": "boolean",
      "default": false,
      "title": "Allow ill-condition",
      "description": "Allow ill-conditioned design matrices."
    },
    "sim_done_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Simulation done file",
      "description": "Create done file when simulation finishes."
    },
    "no_sig_double_flag": {
      "type": "boolean",
      "default": false,
      "title": "No double precision",
      "description": "Compute sig = -log10(p) from float p value, not double."
    }
  },
  "additionalProperties": false,
  "required": [
    "y_input",
    "@type"
  ]
}