{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "mris_place_surface",
  "description": "This program positions the triangular mesh representing a cortical surface, either the 'white' surface (ie, white/gray boundary) or the 'pial' surface (ie, the gray/csf boundary).",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.mris_place_surface"
    },
    "output_surface": {
      "type": "string",
      "title": "Output Surface",
      "description": "Output surface"
    },
    "input_surface": {
      "type": "string",
      "title": "Input Surface",
      "description": "Input surface"
    },
    "autodetect_gray_white_stats": {
      "type": "string",
      "title": "AutoDetect Gray White Stats",
      "description": "Intensity stats created by mris_autodet_gwstats"
    },
    "input_volume": {
      "type": "string",
      "title": "Input Volume",
      "description": "T1-weighed intensity volume used to find white/gray/csf gradients (usually brain.finalsurf.mgz)"
    },
    "surface_type_group": {
      "type": "string",
      "title": "Surface Type",
      "description": "Place the white surface or the pial surface. Must choose one."
    },
    "hemi_group": {
      "type": "string",
      "title": "Hemisphere",
      "description": "Left or right hemisphere. Must choose one."
    },
    "wm_segment": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "White Matter Segmentation",
      "description": "White matter segmentation"
    },
    "out_volume": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output Volume",
      "description": "Save input volume after preprocessing"
    },
    "out_volume_only": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output Volume Only",
      "description": "Save input volume after preprocessing and then exit"
    },
    "restore_255": {
      "type": "boolean",
      "default": false,
      "title": "Restore 255 Flag",
      "description": "Set voxels in the input volume that start off as 255 to 110 (white surf only)."
    },
    "segmentation": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Segmentation",
      "description": "Whole-brain segmentation (usually aseg.presurf.mgz)"
    },
    "cortical_parcellation": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Cortical Parcellation",
      "description": "Set cortical parcellation used to rip vertices (usually ?h.aparc.annot)"
    },
    "nsmooth": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Number of Smooth Iterations",
      "description": "Smooth input surface by number of iterations"
    },
    "smooth_after_rip": {
      "type": "boolean",
      "default": false,
      "title": "Smooth After Rip Flag",
      "description": "Smooth after ripping"
    },
    "max_cbv_dist": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Max CBV Distance",
      "description": "Limit distance MRIScomputeBorderValues() can search from the input"
    },
    "rip_label": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Rip Label",
      "description": "Do not move vertices that are NOT in the cortex label"
    },
    "rip_midline": {
      "type": "boolean",
      "default": false,
      "title": "Rip Midline Flag",
      "description": "Do not move vertices that are in the midline as indicated by the seg"
    },
    "rip_bg": {
      "type": "boolean",
      "default": false,
      "title": "Rip Basal Ganglia Flag",
      "description": "Do not move vertices near basal ganglia (as defined by seg)"
    },
    "rip_bg_no_annot": {
      "type": "boolean",
      "default": false,
      "title": "Rip BG No Annotation Flag",
      "description": "Do not require surface have an annotation when ripping BG"
    },
    "no_rip_freeze": {
      "type": "boolean",
      "default": false,
      "title": "No Rip Freeze Flag",
      "description": "Do NOT move vertices in/near freeze voxels (247 as defined in seg)"
    },
    "rip_wmsa": {
      "type": "boolean",
      "default": false,
      "title": "Rip WMSA Flag",
      "description": "Do not move vertices in/near white-matter signal abnormalities (77,78,79 as defined in seg)"
    },
    "rip_lesion": {
      "type": "boolean",
      "default": false,
      "title": "Rip Lesion Flag",
      "description": "Do not move vertices in/near lesions (25 and 57 as defined in seg)"
    },
    "no_rip": {
      "type": "boolean",
      "default": false,
      "title": "No Rip Flag",
      "description": "Turn off all ripping"
    },
    "rip_overlay": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Rip Overlay",
      "description": "Rip vertices > 0.5 in the surface overlay file"
    },
    "rip_surface": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Rip Surface",
      "description": "Use this surface with ripping midline, BG, Freezes, Lesions, and WMSA."
    },
    "rip_projection": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Rip Projection",
      "description": "Control projection depth along normal to ripsurface when sampling seg"
    },
    "repulse_surface": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Repulse Surface",
      "description": "Force input surface away from this surface (usually the white surface when placing the pial)."
    },
    "white_surface": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "White Surface",
      "description": "Set the white{xyz} coordinates of the input surface using this surface."
    },
    "blend_surface": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Blend Surface",
      "description": "Recompute the xyz coordinates of the input surface by computing a weighted average with the blend surface."
    },
    "multimodal_input": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "MultiModal Input Volume",
      "description": "Specify a T2 or FLAIR input volume used for placing the pial surface. Must be in registration with the input volume."
    },
    "mm_refine": {
      "type": "boolean",
      "default": false,
      "title": "Multimodal Refinement Flag",
      "description": "Use Siless' MultimodalRefinement. Sets tspring=nspring=0.3"
    },
    "pin_medial_wall": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Pin Medial Wall",
      "description": "Set coordinates in vertices NOT in cortexlabel to be that of the white{xyz} coordinates."
    },
    "no_intensity_proc": {
      "type": "boolean",
      "default": false,
      "title": "No Intensity Processing Flag",
      "description": "Do not process the input intensity volume (eg, to remove parts of eye socket)."
    },
    "debug_vertex": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Debug Vertex",
      "description": "Debug vertex number"
    },
    "ripflag_out": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Ripflag Out",
      "description": "Save ripflag as overlay"
    },
    "local_max": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Local Max",
      "description": "Save LocalMaxFoundFlag as overlay"
    },
    "target_surf": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Target Surface",
      "description": "Save CBV target surface"
    },
    "stop_mask": {
      "type": "boolean",
      "default": false,
      "title": "Stop Mask Flag",
      "description": "Stop mask to stop search along normal for max gradient"
    },
    "mm_intensity_limits": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Multimodal Intensity Limits",
      "description": "Intensity limits for placing pial on multimodal input."
    },
    "cover_seg": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Cover Segmentation",
      "description": "Force surface to cover the segmentation"
    },
    "first_peak_d1": {
      "type": "boolean",
      "default": false,
      "title": "First Peak D1 Flag",
      "description": "Use find-first-peak option with 1st derivative in ComputeBorderValues"
    },
    "first_peak_d2": {
      "type": "boolean",
      "default": false,
      "title": "First Peak D2 Flag",
      "description": "Use find-first-peak option with 2nd derivative in ComputeBorderValues"
    },
    "white_border_low_factor": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "White Border Low Factor",
      "description": "white_border_low = f*adgws.gray_mean + (1-f)*adgws.white_mean;"
    },
    "fill_lateral_ventricles": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Fill Lateral Ventricles",
      "description": "Fill lateral ventricles with 110."
    }
  },
  "additionalProperties": false,
  "required": [
    "output_surface",
    "input_surface",
    "autodetect_gray_white_stats",
    "input_volume",
    "surface_type_group",
    "hemi_group"
  ]
}