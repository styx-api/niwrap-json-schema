{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "run_samseg",
  "description": "SAMSEG (Sequence Adaptive Multimodal SEGmentation) is a tool for automated segmentation of brain MRI data.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.run_samseg"
    },
    "output_dir": {
      "type": "string",
      "title": "Output Directory",
      "description": "Target directory for output."
    },
    "input_files": {
      "type": "array",
      "items": {
        "type": "string",
        "x-styx-type": "file"
      },
      "title": "Input Image Files",
      "description": "Input image(s) for segmentation."
    },
    "input_mode": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Input Image Mode",
      "description": "Output basenames for the input image mode."
    },
    "threads": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Number of Threads",
      "description": "Number of threads to use."
    },
    "reg_only": {
      "type": "boolean",
      "default": false,
      "title": "Registration Only",
      "description": "Only perform initial affine registration."
    },
    "reg_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Registration File",
      "description": "Skip initial affine registration and read transform from file."
    },
    "init_reg_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Initial Registration File",
      "description": "Initial affine registration."
    },
    "atlas_dir": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Atlas Directory",
      "description": "Point to an alternative atlas directory."
    },
    "gmm_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "GMM File",
      "description": "Point to an alternative GMM file."
    },
    "ignore_unknown": {
      "type": "boolean",
      "default": false,
      "title": "Ignore Unknown",
      "description": "Ignore final priors corresponding to unknown class."
    },
    "options_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Options File",
      "description": "Override advanced options via a JSON file."
    },
    "pallidum_separate": {
      "type": "boolean",
      "default": false,
      "title": "Pallidum Separate",
      "description": "Move pallidum outside of global white matter class."
    },
    "mesh_stiffness": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mesh Stiffness",
      "description": "Override mesh stiffness."
    },
    "smooth_wm_cortex_priors": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Smooth WM Cortex Priors",
      "description": "Sigma value to smooth the WM and cortex atlas priors."
    },
    "bias_field_smoothing_kernel": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Bias Field Smoothing Kernel",
      "description": "Distance in mm of sinc function center to first zero crossing."
    },
    "lesion": {
      "type": "boolean",
      "default": false,
      "title": "Enable Lesion Segmentation",
      "description": "Enable lesion segmentation (requires tensorflow)."
    },
    "threshold": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Lesion Threshold",
      "description": "Lesion threshold for final segmentation."
    },
    "samples": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Number of Samples",
      "description": "Number of samples for lesion segmentation."
    },
    "burnin": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Burn-in Samples",
      "description": "Number of burn-in samples for lesion segmentation."
    },
    "lesion_pseudo_samples": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Lesion Pseudo Samples",
      "description": "Lesion pseudo samples mean and variance."
    },
    "lesion_rho": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Lesion Ratio",
      "description": "Lesion ratio."
    },
    "lesion_mask_structure": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Lesion Mask Structure",
      "description": "Intensity mask brain structure."
    },
    "lesion_mask_pattern": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Lesion Mask Pattern",
      "description": "Lesion mask pattern for each input volume."
    },
    "random_seed": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Random Seed",
      "description": "Random seed."
    },
    "dissection_photo": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Dissection Photo",
      "description": "Specify hemispheres: left, right, or both."
    },
    "history": {
      "type": "boolean",
      "default": false,
      "title": "Save History",
      "description": "Save history of segmentation."
    },
    "save_posteriors": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Save Posteriors",
      "description": "Save posterior volumes."
    },
    "save_probabilities": {
      "type": "boolean",
      "default": false,
      "title": "Save Probabilities",
      "description": "Save modal class probabilities."
    },
    "showfigs": {
      "type": "boolean",
      "default": false,
      "title": "Show Figures",
      "description": "Show figures during run."
    },
    "save_mesh": {
      "type": "boolean",
      "default": false,
      "title": "Save Mesh",
      "description": "Save final mesh in template space."
    },
    "save_warp": {
      "type": "boolean",
      "default": false,
      "title": "Save Warp",
      "description": "Save image->template warp field."
    },
    "movie": {
      "type": "boolean",
      "default": false,
      "title": "Movie Mode",
      "description": "Show history as controlled time sequence."
    }
  },
  "additionalProperties": false,
  "required": [
    "output_dir",
    "input_files"
  ]
}