{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Performs all, or any part of, the FreeSurfer cortical reconstruction process.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.map_central_sulcus"
    },
    "subjid": {
      "type": "string",
      "title": "Subject ID",
      "description": "FreeSurfer subject identification string which doubles as the name of the reconstruction root directory for the subject."
    },
    "process_directive": {
      "type": "string",
      "title": "Process Directive",
      "description": "Process directive for recon-all (e.g. -all, -autorecon-all, -autorecon1)"
    },
    "hemi_flag": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Hemisphere Process Flag",
      "description": "Specify hemisphere processing (e.g., lh for left hemisphere or rh for right hemisphere)"
    },
    "expert_prefs_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Expert Preferences File",
      "description": "Read-in expert options file for processing. Overrides default options."
    },
    "xopts_use": {
      "type": "boolean",
      "default": false,
      "title": "Use Expert Options Flag",
      "description": "Use pre-existing expert options file."
    },
    "xopts_clean": {
      "type": "boolean",
      "default": false,
      "title": "Clean Expert Options Flag",
      "description": "Delete pre-existing expert options file."
    },
    "xopts_overwrite": {
      "type": "boolean",
      "default": false,
      "title": "Overwrite Expert Options Flag",
      "description": "Overwrite pre-existing expert options file."
    },
    "watershed_cmd": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Watershed Command",
      "description": "Controls how the skull stripping will be performed."
    },
    "xmask_file": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "External Brain Mask",
      "description": "Custom external brain mask to replace automated skullstripping."
    },
    "wsless": {
      "type": "boolean",
      "default": false,
      "title": "WSLess Flag",
      "description": "Decrease watershed threshold (leaves less skull, but can strip more brain)."
    },
    "wsmore": {
      "type": "boolean",
      "default": false,
      "title": "WSMore Flag",
      "description": "Increase watershed threshold (leaves more skull, but can strip less brain)."
    },
    "wsatlas": {
      "type": "boolean",
      "default": false,
      "title": "WSAtlas Flag",
      "description": "Use atlas when skull stripping."
    },
    "no_wsatlas": {
      "type": "boolean",
      "default": false,
      "title": "No WSAtlas Flag",
      "description": "Do not use atlas when skull stripping."
    },
    "no_wsgcaatlas": {
      "type": "boolean",
      "default": false,
      "title": "No WSGCAAtlas Flag",
      "description": "Do not use GCA atlas when skull stripping."
    },
    "wsthresh": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "WS Threshold",
      "description": "Explicitly set watershed threshold."
    },
    "wsseed": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "WS Seed Point",
      "description": "Specify an index (C, R, S) point in the skull."
    },
    "norm3diters": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Norm 3D Iterations",
      "description": "Number of 3d iterations for mri_normalize."
    },
    "normmaxgrad": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Norm Max Grad",
      "description": "Max grad (-g) for mri_normalize. Default is 1."
    },
    "norm1_b": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Norm1 B",
      "description": "In the first usage of mri_normalize, use control point with intensity N below target (default=10.0)."
    },
    "norm2_b": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Norm2 B",
      "description": "In the second usage of mri_normalize, use control point with intensity N below target (default=10.0)."
    },
    "norm1_n": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Norm1 N",
      "description": "In the first usage of mri_normalize, do N number of iterations."
    },
    "norm2_n": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Norm2 N",
      "description": "In the second usage of mri_normalize, do N number of iterations."
    },
    "cm_flag": {
      "type": "boolean",
      "default": false,
      "title": "Conform Volumes Flag",
      "description": "Conform volumes to the min voxel size."
    },
    "no_fix_with_ga": {
      "type": "boolean",
      "default": false,
      "title": "No Fix with GA Flag",
      "description": "Do not use genetic algorithm when fixing topology."
    },
    "fix_diag_only": {
      "type": "boolean",
      "default": false,
      "title": "Fix Diag Only Flag",
      "description": "Topology fixer runs until ?h.defect_labels files are created, then stops."
    },
    "seg_wlo": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Segment WLO",
      "description": "Set wlo value for mri_segment and mris_make_surfaces."
    },
    "seg_ghi": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Segment GHI",
      "description": "Set ghi value for mri_segment and mris_make_surfaces."
    },
    "nothicken": {
      "type": "boolean",
      "default": false,
      "title": "No Thicken Flag",
      "description": "Pass '-thicken 0' to mri_segment."
    },
    "no_ca_align_after": {
      "type": "boolean",
      "default": false,
      "title": "No CA Align After Flag",
      "description": "Turn off -align-after with mri_ca_register."
    },
    "no_ca_align": {
      "type": "boolean",
      "default": false,
      "title": "No CA Align Flag",
      "description": "Turn off -align with mri_ca_label."
    },
    "deface": {
      "type": "boolean",
      "default": false,
      "title": "Deface Flag",
      "description": "Deface subject, written to orig_defaced.mgz."
    },
    "mprage": {
      "type": "boolean",
      "default": false,
      "title": "MPRAGE Protocol Flag",
      "description": "Assume scan parameters are MGH MP-RAGE protocol."
    },
    "washu_mprage": {
      "type": "boolean",
      "default": false,
      "title": "WashU MPRAGE Flag",
      "description": "Assume scan parameters are Wash.U. MP-RAGE protocol."
    },
    "schwartzya3t_atlas": {
      "type": "boolean",
      "default": false,
      "title": "Schwartzya 3T Atlas Flag",
      "description": "For tal reg, use special young adult 3T atlas."
    },
    "mail_username": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mail Username",
      "description": "Mail user when done."
    },
    "threads": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Number of Threads",
      "description": "Set number of threads to use."
    }
  },
  "additionalProperties": false,
  "required": [
    "subjid",
    "process_directive"
  ]
}