{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Constructs an unbiased robust template for longitudinal volumes using an iterative method.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.mri_robust_template"
    },
    "mov_files": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "Movable volumes",
      "description": "Input movable volumes to be aligned to common mean/median template."
    },
    "template_file": {
      "type": "string",
      "title": "Template file",
      "description": "Output template volume (final mean/median image)."
    },
    "sat_value": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Outlier sensitivity",
      "description": "Set outlier sensitivity manually. Higher values mean less sensitivity."
    },
    "satit_flag": {
      "type": "boolean",
      "default": false,
      "title": "Auto-detect sensitivity",
      "description": "Auto-detect good sensitivity (recommended for head or full brain scans)."
    },
    "lta_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output transforms",
      "description": "Output transforms to template (for each input)."
    },
    "mapmov_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Resampled images",
      "description": "Output images: map and resample each input to template."
    },
    "mapmovhdr_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Header-adjusted images",
      "description": "Output images: header-adjusted movables (no resampling)."
    },
    "weights_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Outlier weights",
      "description": "Output weights (outliers) in target space."
    },
    "oneminusw_flag": {
      "type": "boolean",
      "default": false,
      "title": "Invert outlier weights",
      "description": "Weights (outlier) map will be inverted (0=outlier), as in earlier versions."
    },
    "average_type": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Template average type",
      "description": "Construct template from: 0 Mean, 1 Median (default)."
    },
    "inittp": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Initial TP",
      "description": "Use TP# for spatial init (default random), 0: no init."
    },
    "fixtp_flag": {
      "type": "boolean",
      "default": false,
      "title": "Fix initial TP",
      "description": "Map everything to init TP# (init TP is not resampled)."
    },
    "iscale_flag": {
      "type": "boolean",
      "default": false,
      "title": "Intensity scaling",
      "description": "Allow also intensity scaling (default off)."
    },
    "iscaleonly_flag": {
      "type": "boolean",
      "default": false,
      "title": "Intensity scaling only",
      "description": "Only perform iscale (no transformation, default off)."
    },
    "iscalein_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Initial intensity scales",
      "description": "Use initial intensity scales."
    },
    "iscaleout_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Final intensity scales",
      "description": "Output final intensity scales (will activate --iscale)."
    },
    "transonly_flag": {
      "type": "boolean",
      "default": false,
      "title": "Translation only",
      "description": "Find 3 parameter translation only."
    },
    "affine_flag": {
      "type": "boolean",
      "default": false,
      "title": "Affine transform",
      "description": "Find 12 parameter affine transform."
    },
    "ixforms_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Initial transforms",
      "description": "Use initial transforms (lta) on source ('id'=identity)."
    },
    "masks_files": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Input masks",
      "description": "Input masks applied to movables."
    },
    "vox2vox_flag": {
      "type": "boolean",
      "default": false,
      "title": "VOX2VOX output",
      "description": "Output VOX2VOX lta file (default is RAS2RAS)."
    },
    "leastsquares_flag": {
      "type": "boolean",
      "default": false,
      "title": "Least squares",
      "description": "Use least squares instead of robust M-estimator (for testing only)."
    },
    "noit_flag": {
      "type": "boolean",
      "default": false,
      "title": "No iteration",
      "description": "Do not iterate, just create first template."
    },
    "maxit": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Max iterations",
      "description": "Iterate max # times (if #tp>2 default 6, else 5 for 2tp reg.)."
    },
    "highit": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "High resolution max iterations",
      "description": "Iterate max # times on highest resolution (default 5)."
    },
    "epsit": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Iteration stop threshold",
      "description": "Stop iterations when all transform updates fall below the specified value."
    },
    "pairmaxit": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Pairwise max iterations",
      "description": "Iterate max # times (default 5) for individual pairwise registrations."
    },
    "pairepsit": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Pairwise iteration stop threshold",
      "description": "Stop individual pairwise registration iterations when transform updates fall below the specified value."
    },
    "subsample": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Subsample threshold",
      "description": "Subsample if dimension > specified value on all axes (default no subsampling)."
    },
    "nomulti_flag": {
      "type": "boolean",
      "default": false,
      "title": "Disable multi-resolution",
      "description": "Do not use multi-resolution (only highest resolution)."
    },
    "floattype_flag": {
      "type": "boolean",
      "default": false,
      "title": "Convert to float",
      "description": "Convert images to float internally (default: keep input type)."
    },
    "finalnearest_flag": {
      "type": "boolean",
      "default": false,
      "title": "Nearest neighbor interpolation",
      "description": "Use nearest neighbor in final interpolation when creating average."
    },
    "doubleprec_flag": {
      "type": "boolean",
      "default": false,
      "title": "Double precision",
      "description": "Use double precision instead of float internally (large memory usage)."
    },
    "cras_flag": {
      "type": "boolean",
      "default": false,
      "title": "Center at CRAS",
      "description": "Center template at average CRAS, instead of average barycenter."
    },
    "res_thresh": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Resolution threshold",
      "description": "Volume resolution threshold (default is 0.01 mm)."
    },
    "frobnorm_thresh": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Frobenius norm threshold",
      "description": "Matrix frobenius norm threshold (default is 0.0001)."
    },
    "debug_flag": {
      "type": "boolean",
      "default": false,
      "title": "Debug mode",
      "description": "Show debug output (default no debug output)."
    }
  },
  "additionalProperties": false,
  "required": [
    "mov_files",
    "template_file"
  ]
}