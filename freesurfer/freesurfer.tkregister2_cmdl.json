{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "tkregister2 is a tool to assist in the manual tuning of the linear registration between two volumes, mainly for the purpose of interacting with the FreeSurfer anatomical stream.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "freesurfer.tkregister2_cmdl"
    },
    "movable_volume": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Movable volume",
      "description": "Path to the movable volume."
    },
    "target_volume": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Target volume",
      "description": "Path to the target volume."
    },
    "fstarg_flag": {
      "type": "boolean",
      "default": false,
      "title": "FSTARG flag",
      "description": "Target is relative to subjectid/mri."
    },
    "reg_file": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Registration file",
      "description": "Path to input/output registration file."
    },
    "check_reg_flag": {
      "type": "boolean",
      "default": false,
      "title": "Check registration flag",
      "description": "Only check, no --reg needed."
    },
    "regheader_flag": {
      "type": "boolean",
      "default": false,
      "title": "Regheader flag",
      "description": "Compute registration from headers."
    },
    "regheader_center_flag": {
      "type": "boolean",
      "default": false,
      "title": "Regheader center flag",
      "description": "Same as --regheader but aligns volume centers."
    },
    "fsl_targ_flag": {
      "type": "boolean",
      "default": false,
      "title": "FSL target flag",
      "description": "Use FSLDIR/data/standard/avg152T1.nii.gz."
    },
    "fsl_targ_lr_flag": {
      "type": "boolean",
      "default": false,
      "title": "FSL target LR flag",
      "description": "Use FSLDIR/data/standard/avg152T1_LR-marked.nii.gz."
    },
    "gca_subject": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "GCA subject",
      "description": "Subject ID for linear GCA registration check."
    },
    "gca_skull_subject": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "GCA skull subject",
      "description": "Subject ID for linear 'with skull' GCA registration check."
    },
    "no_zero_cras_flag": {
      "type": "boolean",
      "default": false,
      "title": "No zero CRAS flag",
      "description": "Do not zero target cras (done with --fstal)."
    },
    "movbright": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Movable brightness",
      "description": "Brightness of movable volume."
    },
    "no_inorm_flag": {
      "type": "boolean",
      "default": false,
      "title": "No intensity normalization flag",
      "description": "Turn off intensity normalization."
    },
    "fmov": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Movable brightness factor",
      "description": "Set movable volume brightness."
    },
    "fmov_targ_flag": {
      "type": "boolean",
      "default": false,
      "title": "Apply movable brightness to target flag",
      "description": "Apply movable brightness to the target."
    },
    "plane": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "View plane",
      "description": "Startup view plane: cor, sag, ax."
    },
    "slice": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Slice number",
      "description": "Startup slice number."
    },
    "volview": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Volume view",
      "description": "Startup with targ or mov."
    },
    "fov": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Field of view",
      "description": "Window FOV in mm (default is 256)."
    },
    "movscale": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Movable volume scale",
      "description": "Scale size of movable volume by scale."
    },
    "surf": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Surface name",
      "description": "Display surface as an overlay."
    },
    "surf_rgb": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Surface RGB color",
      "description": "Set surface color (0-255) for R G B."
    },
    "lh_only_flag": {
      "type": "boolean",
      "default": false,
      "title": "Left hemisphere only flag",
      "description": "Only load/display left hemisphere."
    },
    "rh_only_flag": {
      "type": "boolean",
      "default": false,
      "title": "Right hemisphere only flag",
      "description": "Only load/display right hemisphere."
    },
    "fstal_flag": {
      "type": "boolean",
      "default": false,
      "title": "FSTAL flag",
      "description": "Set movable to be tal and reg to be taliarach.xfm."
    },
    "talxfmname": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Talairach transform name",
      "description": "Set movable to be tal and reg to be talxfmname."
    },
    "ixfm": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Inverse registration matrix file",
      "description": "MNI-style inverse registration input matrix."
    },
    "xfm": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Registration matrix file",
      "description": "MNI-style registration input matrix."
    },
    "xfmout": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output registration matrix file",
      "description": "MNI-style registration output matrix."
    },
    "fsl": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FSL registration matrix input file",
      "description": "FSL-style registration input matrix."
    },
    "fslregout": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FSL registration matrix output file",
      "description": "FSL-Style registration output matrix."
    },
    "freeview": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FreeView registration matrix output file",
      "description": "FreeView registration output matrix."
    },
    "vox2vox": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Vox2vox matrix file",
      "description": "Vox2vox matrix in ascii."
    },
    "lta": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Linear Transform Array file",
      "description": "Linear Transform Array file."
    },
    "lta_inv": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Inverted LTA file",
      "description": "Read in LTA and invert."
    },
    "ltaout": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Output LTA file",
      "description": "Output a Linear Transform Array."
    },
    "ltaout_inv_flag": {
      "type": "boolean",
      "default": false,
      "title": "LTA output invert flag",
      "description": "Invert transform in ltaoutfile."
    },
    "feat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FEAT directory",
      "description": "Check example_func2standard registration."
    },
    "fsfeat": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "FSFEAT directory",
      "description": "Check reg/freesurfer/register.dat registration."
    },
    "identity_flag": {
      "type": "boolean",
      "default": false,
      "title": "Identity registration matrix flag",
      "description": "Use identity as registration matrix."
    },
    "subject_id": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Subject ID",
      "description": "Set subject id."
    },
    "subjects_dir": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Subjects directory",
      "description": "Use specified directory as SUBJECTS_DIR."
    },
    "nofix_flag": {
      "type": "boolean",
      "default": false,
      "title": "No fix flag",
      "description": "Don't fix old tkregister matrices."
    },
    "float2int": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Float to int specification",
      "description": "Specify old tkregister float2int."
    },
    "title": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Window title",
      "description": "Set window title."
    },
    "tag_flag": {
      "type": "boolean",
      "default": false,
      "title": "Tag flag",
      "description": "Tag movable volume near the col/row origin."
    },
    "mov_orientation": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Movable volume orientation",
      "description": "Supply orientation string for movable volume."
    },
    "targ_orientation": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Target volume orientation",
      "description": "Supply orientation string for target volume."
    },
    "int": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Intermediate volume & registration",
      "description": "Use registration from intermediate volume."
    },
    "double_window_size_flag": {
      "type": "boolean",
      "default": false,
      "title": "Double window size flag",
      "description": "Double window size."
    },
    "window_scale": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Window scale",
      "description": "Scale window by specified scale."
    },
    "det": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Determinant output file",
      "description": "Save determinant of registration matrix to specified file."
    },
    "aseg_flag": {
      "type": "boolean",
      "default": false,
      "title": "Load aseg flag",
      "description": "Load aseg and hit 'd' to toggle."
    },
    "aparc_flag": {
      "type": "boolean",
      "default": false,
      "title": "Load aparc+aseg flag",
      "description": "Load aparc+aseg and hit 'c' to toggle."
    },
    "wmparc_flag": {
      "type": "boolean",
      "default": false,
      "title": "Load wmparc flag",
      "description": "Load wmparc and hit 'c' to toggle."
    },
    "gdiagno": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Debug level",
      "description": "Set debug level."
    },
    "trans": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Translation vector",
      "description": "Translation (mm) to apply to registration matrix."
    },
    "rot": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Rotation angles",
      "description": "Rotation angles (deg) to apply to registration matrix."
    },
    "conf_targ_flag": {
      "type": "boolean",
      "default": false,
      "title": "Conform target flag",
      "description": "Conform target (assumes reg computed to conform target, eg, GCA)."
    }
  },
  "additionalProperties": false,
  "required": [
    "movable_volume",
    "target_volume"
  ]
}