{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "antsApplyTransformsToPoints",
  "description": "antsApplyTransformsToPoints, applied to an input image, transforms it according to a reference image and a transform (or a set of transforms). It reads in a CSV file with the first D columns defining the spatial location where the spatial location is defined in physical coordinates. The CSV file should have a header row.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "ants/antsApplyTransformsToPoints"
    },
    "dimensionality": {
      "anyOf": [
        {
          "type": "integer",
          "enum": [
            2,
            3
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Dimensionality",
      "description": "This option forces the points to be treated as a specified-dimensionality."
    },
    "precision": {
      "anyOf": [
        {
          "type": "integer",
          "enum": [
            0,
            1
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Precision",
      "description": "Use double precision."
    },
    "forantsr": {
      "anyOf": [
        {
          "type": "integer",
          "enum": [
            0,
            1
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "For ANTsR",
      "description": "Set true for ANTsR IO."
    },
    "input": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Input",
      "description": "Input CSV file with columns including x,y,z,t headers that define the points in physical space, or a 2D .mha binary image file."
    },
    "output": {
      "type": "string",
      "title": "Output",
      "description": "Output the warped points to a CSV file."
    },
    "transform": {
      "anyOf": [
        {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "@type": {
                  "const": "single_transform"
                }
              },
              "additionalProperties": false,
              "title": "Single Transform",
              "required": [
                "@type"
              ]
            },
            {
              "type": "object",
              "properties": {
                "@type": {
                  "const": "inverse_transform"
                },
                "transform_file": {
                  "type": "string",
                  "x-styx-type": "file",
                  "title": "Transform File"
                }
              },
              "additionalProperties": false,
              "title": "Inverse Transform",
              "required": [
                "@type",
                "transform_file"
              ]
            }
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Transform",
      "description": "Transform file(s) to apply to the input points. Uses an inverse transform if specified as [transformFileName,1]."
    }
  },
  "additionalProperties": false,
  "required": [
    "input",
    "output"
  ]
}