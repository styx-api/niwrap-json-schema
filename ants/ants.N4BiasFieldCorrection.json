{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "N4 is a variant of the popular N3 (nonparameteric nonuniform normalization) retrospective bias correction algorithm. Based on the assumption that the corruption of the low frequency bias field can be modeled as a convolution of the intensity histogram by a Gaussian, the basic algorithmic protocol is to iterate between deconvolving the intensity histogram by a Gaussian, remapping the intensities, and then spatially smoothing this result by a B-spline modeling of the bias field itself.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "ants.N4BiasFieldCorrection"
    },
    "image_dimensionality": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Image dimensionality",
      "description": "-d, --image-dimensionality 2/3/4. This option forces the image to be treated as a specified-dimensional image. If not specified, N4 tries to infer the dimensionality from the input image."
    },
    "shrink_factor": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Shrink factor",
      "description": "-s, --shrink-factor 1/2/3/(4)/... Running N4 on large images can be time consuming. To lessen computation time, the input image can be resampled. The shrink factor, specified as a single integer, describes this resampling. Shrink factors <= 4 are commonly used. Note that the shrink factor is only applied to the first two or three dimensions which we assume are spatial."
    },
    "mask_image": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Mask image",
      "description": "-x, --mask-image maskImageFilename. If a mask image is specified, the final bias correction is only performed in the mask region. If a weight image is not specified, only intensity values inside the masked region are used during the execution of the algorithm. If a weight image is specified, only the non-zero weights are used in the execution of the algorithm although the mask region defines where bias correction is performed in the final output. Otherwise bias correction occurs over the entire image domain.  See also the option description for the weight image. If a mask image is *not* specified then the entire image region will be used as the mask region. Note that this is different than the N3 implementation which uses the results of Otsu thresholding to define a mask. However, this leads to unknown anatomical regions being included and excluded during the bias correction."
    },
    "rescale_intensities": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Rescale intensities",
      "description": "-r, --rescale-intensities 0/(1). At each iteration, a new intensity mapping is calculated and applied but there is nothing which constrains the new intensity range to be within certain values.  The result is that the range can \"drift\" from the original at each iteration.  This option rescales to the [min,max] range of the original image intensities within the user-specified mask. A mask is required to perform rescaling."
    },
    "weight_image": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Weight image",
      "description": "-w, --weight-image weightImageFilename. The weight image allows the user to perform a relative weighting of specific voxels during the B-spline fitting. For example, some studies have shown that N3 performed on white matter segmentations improves performance. If one has a spatial probability map of the white matter, one can use this map to weight the b-spline fitting towards those voxels which are more probabilistically classified as white matter. See also the option description for the mask image."
    },
    "convergence": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "convergence"
            },
            "convergence": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "title": "Convergence"
            },
            "convergence_threshold": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Convergence threshold"
            }
          },
          "additionalProperties": false,
          "description": "-c, --convergence [<numberOfIterations=50x50x50x50>,<convergenceThreshold=0.0>]. Convergence is determined by calculating the coefficient of variation between subsequent iterations. When this value is less than the specified threshold from the previous iteration or the maximum number of iterations is exceeded the program terminates. Multiple resolutions can be specified by using 'x' between the number of iterations at each resolution, e.g. 100x50x50.",
          "required": [
            "convergence"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "-c, --convergence [<numberOfIterations=50x50x50x50>,<convergenceThreshold=0.0>]. Convergence is determined by calculating the coefficient of variation between subsequent iterations. When this value is less than the specified threshold from the previous iteration or the maximum number of iterations is exceeded the program terminates. Multiple resolutions can be specified by using 'x' between the number of iterations at each resolution, e.g. 100x50x50."
    },
    "bspline_fitting": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "bspline_fitting"
            },
            "spline_distance": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "title": "Spline distance"
            },
            "spline_order": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Spline order"
            }
          },
          "additionalProperties": false,
          "description": "-b, --bspline-fitting [splineDistance,<splineOrder=3>]. These options describe the b-spline fitting parameters. The initial b-spline mesh at the coarsest resolution is specified either as the number of elements in each dimension, e.g. 2x2x3 for 3-D images, or it can be specified as a single scalar parameter which describes the isotropic sizing of the mesh elements. The latter option is typically preferred. For each subsequent level, the spline distance decreases in half, or equivalently, the number of mesh elements doubles Cubic splines (order = 3) are typically used. The default setting is to employ a single mesh element over the entire domain, i.e., -b [1x1x1,3].",
          "required": [
            "spline_distance"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "-b, --bspline-fitting [splineDistance,<splineOrder=3>]. These options describe the b-spline fitting parameters. The initial b-spline mesh at the coarsest resolution is specified either as the number of elements in each dimension, e.g. 2x2x3 for 3-D images, or it can be specified as a single scalar parameter which describes the isotropic sizing of the mesh elements. The latter option is typically preferred. For each subsequent level, the spline distance decreases in half, or equivalently, the number of mesh elements doubles Cubic splines (order = 3) are typically used. The default setting is to employ a single mesh element over the entire domain, i.e., -b [1x1x1,3]."
    },
    "histogram_sharpening": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "histogram_sharpening"
            },
            "fwhm": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "FWHM"
            },
            "wiener_noise": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Wiener noise"
            },
            "number_of_histogram_bins": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Number of histogram bins"
            }
          },
          "additionalProperties": false,
          "description": "-t, --histogram-sharpening [<FWHM=0.15>,<wienerNoise=0.01>,<numberOfHistogramBins=200>]. These options describe the histogram sharpening parameters, i.e. the deconvolution step parameters described in the original N3 algorithm. The default values have been shown to work fairly well."
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "-t, --histogram-sharpening [<FWHM=0.15>,<wienerNoise=0.01>,<numberOfHistogramBins=200>]. These options describe the histogram sharpening parameters, i.e. the deconvolution step parameters described in the original N3 algorithm. The default values have been shown to work fairly well."
    },
    "verbose": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Verbose",
      "description": "Verbose output."
    },
    "input_image": {
      "type": "string",
      "x-styx-type": "file",
      "title": "Input image",
      "description": "-i, --input-image inputImageFilename. A scalar image is expected as input for bias correction. Since N4 log transforms the intensities, negative values or values close to zero should be processed prior to correction."
    },
    "output": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "correctedOutput"
            },
            "correctedOutputFileName": {
              "type": "string",
              "title": "Bias corrected output file name",
              "description": "Output file name."
            }
          },
          "additionalProperties": false,
          "description": "Bias corrected version of the input image.",
          "required": [
            "correctedOutputFileName"
          ]
        },
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "correctedOutputNoise"
            },
            "correctedOutputFileName": {
              "type": "string",
              "title": "Bias corrected output file name",
              "description": "Output file name."
            },
            "biasFile": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bias field output file name",
              "description": "Output bias field image."
            }
          },
          "additionalProperties": false,
          "description": "Bias corrected version of the input image, along with noise image.",
          "required": [
            "correctedOutputFileName"
          ]
        }
      ],
      "title": "output",
      "description": "The bias corrected version of the input image, with optional noise image."
    }
  },
  "additionalProperties": false,
  "required": [
    "input_image",
    "output"
  ]
}