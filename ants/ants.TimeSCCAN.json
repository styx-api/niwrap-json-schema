{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "A tool for sparse statistical analysis on connectivity within a subject.",
  "type": "object",
  "properties": {
    "@type": {
      "const": "ants.TimeSCCAN"
    },
    "output": {
      "type": "string",
      "title": "Output Image",
      "description": "Output is a 2D correlation matrix."
    },
    "number_consecutive_labels": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": 0,
      "title": "Number of Consecutive Labels",
      "description": "Number of consecutive labels in data."
    },
    "minimum_region_size": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": 1,
      "title": "Minimum Region Size",
      "description": "Minimum size of a region: regions below this size are given a 0.0 connectivity value."
    },
    "iterations": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": 20,
      "title": "Iterations",
      "description": "Number of iterations."
    },
    "sparsity": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": 0.1,
      "title": "Sparsity",
      "description": "Sparsity - a float from (0,1] indicating what fraction of the data to use."
    },
    "n_eigenvectors": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": 2,
      "title": "Number of Eigenvectors",
      "description": "Number of permutations to use in scca."
    },
    "robustify": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": 0,
      "title": "Robustify",
      "description": "Rank-based scca."
    },
    "l1": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "null"
        }
      ],
      "default": 0,
      "title": "L1 Penalty",
      "description": "Use l1 ( > 0 ) or l0 ( < 0 ) penalty, also sets gradient step size e.g. -l 0.5 ( L1 ) , -l -0.5 (L0) will set 0.5 grad descent step for either penalty."
    },
    "cluster_thresh": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": 1,
      "title": "Cluster Threshold",
      "description": "Cluster threshold on view P."
    },
    "ridge_cca": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ],
      "default": 0,
      "title": "Ridge CCA",
      "description": "Number of permutations to use in scca."
    },
    "partial_scca_option": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Partial SCCA Option",
      "description": "Choices for partial SCCA: PQ, PminusRQ, PQminusR, PminusRQminusR."
    },
    "timeseriesimage_to_matrix": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "@type": {
              "const": "timeseriesimage_to_matrix"
            },
            "timeseries_image": {
              "type": "string",
              "x-styx-type": "file",
              "title": "4D Image"
            },
            "mask_image": {
              "type": "string",
              "x-styx-type": "file",
              "title": "3D Mask"
            }
          },
          "additionalProperties": false,
          "description": "Takes a timeseries (4D) image and converts it to a 2D matrix csv format as output. If the mask has multiple labels (more than one), then the average time series in each label will be computed and put in the csv.",
          "required": [
            "timeseries_image",
            "mask_image"
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Takes a timeseries (4D) image and converts it to a 2D matrix csv format as output. If the mask has multiple labels (more than one), then the average time series in each label will be computed and put in the csv."
    },
    "labelsimage_to_matrix": {
      "anyOf": [
        {
          "type": "string",
          "x-styx-type": "file"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Labels Image to Matrix",
      "description": "Takes a labeled (3D) image and converts it to a 2D matrix csv format as output."
    },
    "network": {
      "anyOf": [
        {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "@type": {
                  "const": "network_scca"
                },
                "time_matrix": {
                  "type": "string",
                  "x-styx-type": "file",
                  "title": "Time Matrix"
                },
                "label_matrix": {
                  "type": "string",
                  "x-styx-type": "file",
                  "title": "Label Matrix"
                }
              },
              "additionalProperties": false,
              "required": [
                "time_matrix",
                "label_matrix"
              ]
            },
            {
              "type": "object",
              "properties": {
                "@type": {
                  "const": "network_region_averaging"
                },
                "time_matrix": {
                  "type": "string",
                  "x-styx-type": "file",
                  "title": "Time Matrix"
                },
                "label_matrix": {
                  "type": "string",
                  "x-styx-type": "file",
                  "title": "Label Matrix"
                }
              },
              "additionalProperties": false,
              "required": [
                "time_matrix",
                "label_matrix"
              ]
            }
          ]
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Network",
      "description": "Build the network connectivity matrix."
    }
  },
  "additionalProperties": false,
  "required": [
    "output"
  ]
}